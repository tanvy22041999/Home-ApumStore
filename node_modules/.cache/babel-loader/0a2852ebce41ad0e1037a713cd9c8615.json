{"ast":null,"code":"import { takeEvery, fork, all, call, put } from \"redux-saga/effects\";\nimport { get } from \"lodash\";\nimport NotificationActions, { NotificationActionTypes } from \"../actions/notification\";\nimport { getAllNotifications, getNewestNotifications, addNotification, updateNotification, deleteNotification, updateAllNotifications, deleteAllNotifications } from \"../apis/notification\";\n\nfunction* handleGetNewest({\n  payload\n}) {\n  try {\n    const result = yield call(getNewestNotifications, payload);\n    const data = get(result, \"data\");\n    if (data.code !== 200) throw data;\n    yield put(NotificationActions.onGetNewestSuccess(data.notifications, data.total));\n  } catch (error) {\n    yield put(NotificationActions.onGetNewestError(error));\n  }\n}\n\nfunction* handleGetList({\n  payload\n}) {\n  try {\n    const result = yield call(getAllNotifications, payload);\n    const data = get(result, \"data\");\n    if (data.code !== 200) throw data;\n    yield put(NotificationActions.onGetListSuccess(data.notifications, data.total));\n  } catch (error) {\n    yield put(NotificationActions.onGetListError(error));\n  }\n}\n/**\n *\n * create\n */\n\n\nfunction* handleCreate({\n  payload\n}) {\n  try {\n    if (payload) {\n      const result = yield call(addNotification, payload);\n      const data = get(result, \"data\", {});\n      if (data.code !== 201) throw data;\n      yield put(NotificationActions.onCreateSuccess(data.notification));\n    }\n  } catch (error) {\n    yield put(NotificationActions.onCreateError(error));\n  }\n}\n/**\n *\n * update\n */\n\n\nfunction* handleUpdate({\n  payload\n}) {\n  try {\n    const result = yield call(updateNotification, payload.id, payload.data);\n    const data = get(result, \"data\", {});\n    if (data.code !== 200) throw data;\n    yield put(NotificationActions.onUpdateSuccess(data));\n    yield put(NotificationActions.onGetList(payload.params));\n    yield put(NotificationActions.onGetNewest({ ...payload.params,\n      limit: 5\n    }));\n  } catch (error) {\n    yield put(NotificationActions.onUpdateError(error));\n  }\n}\n\nfunction* handleUpdateAll({\n  payload\n}) {\n  try {\n    const result = yield call(updateAllNotifications, payload.data);\n    const data = get(result, \"data\", {});\n    if (data.code !== 200) throw data;\n    yield put(NotificationActions.onUpdateAllSuccess(data));\n    yield put(NotificationActions.onGetList(payload.params));\n    yield put(NotificationActions.onGetNewest({ ...payload.params,\n      limit: 5\n    }));\n  } catch (error) {\n    yield put(NotificationActions.onUpdateAllError(error));\n  }\n}\n/**\n *\n * delete\n */\n\n\nfunction* handleDelete({\n  payload\n}) {\n  try {\n    const result = yield call(deleteNotification, payload.id);\n    const data = get(result, \"data\", {});\n    if (data.code !== 200) throw data;\n    yield put(NotificationActions.onDeleteSuccess(data));\n    yield put(NotificationActions.onGetList(payload.params));\n    yield put(NotificationActions.onGetNewest({ ...payload.params,\n      limit: 5\n    }));\n  } catch (error) {\n    yield put(NotificationActions.onDeleteError(error));\n  }\n}\n\nfunction* handleDeleteAll({\n  payload\n}) {\n  try {\n    const result = yield call(deleteAllNotifications, payload.id);\n    const data = get(result, \"data\", {});\n    if (data.code !== 200) throw data;\n    yield put(NotificationActions.onDeleteAllSuccess(data));\n    yield put(NotificationActions.onGetList(payload.params));\n    yield put(NotificationActions.onGetNewest({ ...payload.params,\n      limit: 5\n    }));\n  } catch (error) {\n    yield put(NotificationActions.onDeleteAllError(error));\n  }\n}\n\nexport function* watchGetNewest() {\n  yield takeEvery(NotificationActionTypes.GET_NEWEST, handleGetNewest);\n}\nexport function* watchGetList() {\n  yield takeEvery(NotificationActionTypes.GET_LIST, handleGetList);\n}\nexport function* watchCreate() {\n  yield takeEvery(NotificationActionTypes.CREATE, handleCreate);\n}\nexport function* watchUpdate() {\n  yield takeEvery(NotificationActionTypes.UPDATE, handleUpdate);\n}\nexport function* watchDelete() {\n  yield takeEvery(NotificationActionTypes.DELETE, handleDelete);\n}\nexport function* watchUpdateAll() {\n  yield takeEvery(NotificationActionTypes.UPDATE_ALL, handleUpdateAll);\n}\nexport function* watchDeleteAll() {\n  yield takeEvery(NotificationActionTypes.DELETE_ALL, handleDeleteAll);\n}\nexport default function* rootSaga() {\n  yield all([fork(watchGetNewest), fork(watchGetList), fork(watchCreate), fork(watchUpdate), fork(watchDelete), fork(watchUpdateAll), fork(watchDeleteAll)]);\n}","map":{"version":3,"sources":["/Users/vyduong/Documents/HOME_ApumStoreSua/src/redux/sagas/notification.js"],"names":["takeEvery","fork","all","call","put","get","NotificationActions","NotificationActionTypes","getAllNotifications","getNewestNotifications","addNotification","updateNotification","deleteNotification","updateAllNotifications","deleteAllNotifications","handleGetNewest","payload","result","data","code","onGetNewestSuccess","notifications","total","error","onGetNewestError","handleGetList","onGetListSuccess","onGetListError","handleCreate","onCreateSuccess","notification","onCreateError","handleUpdate","id","onUpdateSuccess","onGetList","params","onGetNewest","limit","onUpdateError","handleUpdateAll","onUpdateAllSuccess","onUpdateAllError","handleDelete","onDeleteSuccess","onDeleteError","handleDeleteAll","onDeleteAllSuccess","onDeleteAllError","watchGetNewest","GET_NEWEST","watchGetList","GET_LIST","watchCreate","CREATE","watchUpdate","UPDATE","watchDelete","DELETE","watchUpdateAll","UPDATE_ALL","watchDeleteAll","DELETE_ALL","rootSaga"],"mappings":"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","sourcesContent":["import { takeEvery, fork, all, call, put } from \"redux-saga/effects\";\nimport { get } from \"lodash\";\nimport NotificationActions, { NotificationActionTypes } from \"../actions/notification\";\nimport { getAllNotifications, getNewestNotifications, addNotification, updateNotification, deleteNotification, updateAllNotifications, deleteAllNotifications } from \"../apis/notification\";\n\nfunction* handleGetNewest({ payload }) {\n  try {\n    const result = yield call(getNewestNotifications, payload);\n    const data = get(result, \"data\");\n    if (data.code !== 200) throw data;\n    yield put(NotificationActions.onGetNewestSuccess(data.notifications, data.total));\n  } catch (error) {\n    yield put(NotificationActions.onGetNewestError(error));\n  }\n}\n\nfunction* handleGetList({ payload }) {\n  try {\n    const result = yield call(getAllNotifications, payload);\n    const data = get(result, \"data\");\n    if (data.code !== 200) throw data;\n    yield put(NotificationActions.onGetListSuccess(data.notifications, data.total));\n  } catch (error) {\n    yield put(NotificationActions.onGetListError(error));\n  }\n}\n\n/**\n *\n * create\n */\nfunction* handleCreate({ payload }) {\n  try {\n    if(payload){\n      const result = yield call(addNotification, payload);\n      const data = get(result, \"data\", {});\n      if (data.code !== 201) throw data;\n      yield put(NotificationActions.onCreateSuccess(data.notification));\n    }\n  } catch (error) {\n    yield put(NotificationActions.onCreateError(error));\n  }\n}\n\n/**\n *\n * update\n */\nfunction* handleUpdate({ payload }) {\n  try {\n    const result = yield call(updateNotification, payload.id, payload.data);\n    const data = get(result, \"data\", {});\n    if (data.code !== 200) throw data;\n    yield put(NotificationActions.onUpdateSuccess(data));\n    yield put(NotificationActions.onGetList(payload.params));\n    yield put(NotificationActions.onGetNewest({...payload.params, limit: 5}));\n  } catch (error) {\n    yield put(NotificationActions.onUpdateError(error));\n  }\n}\n\nfunction* handleUpdateAll({ payload }) {\n  try {\n    const result = yield call(updateAllNotifications, payload.data);\n    const data = get(result, \"data\", {});\n    if (data.code !== 200) throw data;\n    yield put(NotificationActions.onUpdateAllSuccess(data));\n    yield put(NotificationActions.onGetList(payload.params));\n    yield put(NotificationActions.onGetNewest({...payload.params, limit: 5}));\n  } catch (error) {\n    yield put(NotificationActions.onUpdateAllError(error));\n  }\n}\n\n/**\n *\n * delete\n */\nfunction* handleDelete({ payload }) {\n  try {\n    const result = yield call(deleteNotification, payload.id);\n    const data = get(result, \"data\", {});\n    if (data.code !== 200) throw data;\n    yield put(NotificationActions.onDeleteSuccess(data));\n    yield put(NotificationActions.onGetList(payload.params));\n    yield put(NotificationActions.onGetNewest({...payload.params, limit: 5}));\n  } catch (error) {\n    yield put(NotificationActions.onDeleteError(error));\n  }\n}\n\nfunction* handleDeleteAll({ payload }) {\n  try {\n    const result = yield call(deleteAllNotifications, payload.id);\n    const data = get(result, \"data\", {});\n    if (data.code !== 200) throw data;\n    yield put(NotificationActions.onDeleteAllSuccess(data));\n    yield put(NotificationActions.onGetList(payload.params));\n    yield put(NotificationActions.onGetNewest({...payload.params, limit: 5}));\n  } catch (error) {\n    yield put(NotificationActions.onDeleteAllError(error));\n  }\n}\n\nexport function* watchGetNewest() {\n  yield takeEvery(NotificationActionTypes.GET_NEWEST, handleGetNewest);\n}\nexport function* watchGetList() {\n  yield takeEvery(NotificationActionTypes.GET_LIST, handleGetList);\n}\nexport function* watchCreate() {\n  yield takeEvery(NotificationActionTypes.CREATE, handleCreate);\n}\nexport function* watchUpdate() {\n  yield takeEvery(NotificationActionTypes.UPDATE, handleUpdate);\n}\nexport function* watchDelete() {\n  yield takeEvery(NotificationActionTypes.DELETE, handleDelete);\n}\nexport function* watchUpdateAll() {\n  yield takeEvery(NotificationActionTypes.UPDATE_ALL, handleUpdateAll);\n}\nexport function* watchDeleteAll() {\n  yield takeEvery(NotificationActionTypes.DELETE_ALL, handleDeleteAll);\n}\n\nexport default function* rootSaga() {\n  yield all([\n    fork(watchGetNewest),\n    fork(watchGetList),\n    fork(watchCreate),\n    fork(watchUpdate),\n    fork(watchDelete),\n    fork(watchUpdateAll),\n    fork(watchDeleteAll),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}