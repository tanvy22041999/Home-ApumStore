{"ast":null,"code":"//Nơi chứa các hàm gọi API riêng biệt cho từng module\n//Module Product\nimport axiosService from'../../utils/AxiosService';import{API_ENDPOINT_AUTH}from'../../constants/index';import queryString from'query-string';var url='/users/notification';var url_all='/users/notification-all';// http://localhost:3000/users/notification  METHOD = GET\nexport var getAllNotifications=function getAllNotifications(){var params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var queryParams='';if(Object.keys(params).length>0){queryParams=\"?\".concat(queryString.stringify(params));}return axiosService.get(\"\".concat(API_ENDPOINT_AUTH).concat(url).concat(queryParams));};// http://localhost:3000/users/notification-newest  METHOD = GET\nexport var getNewestNotifications=function getNewestNotifications(){var params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var queryParams='';if(Object.keys(params).length>0){queryParams=\"?\".concat(queryString.stringify(params));}return axiosService.get(\"\".concat(API_ENDPOINT_AUTH,\"/users/notification-newest\").concat(queryParams));};// http://localhost:3000/users/notification  METHOD = POST\nexport var addNotification=function addNotification(data){return axiosService.post(\"\".concat(API_ENDPOINT_AUTH).concat(url),data);};// http://localhost:3000/users/notification/:notificationId\nexport var updateNotification=function updateNotification(notificationId,data){return axiosService.put(\"\".concat(API_ENDPOINT_AUTH).concat(url,\"/\").concat(notificationId),data);};// http://localhost:3000/users/notification-all\nexport var updateAllNotifications=function updateAllNotifications(data){return axiosService.put(\"\".concat(API_ENDPOINT_AUTH).concat(url_all),data);};// http://localhost:3000/users/notification/:notificationId\nexport var deleteNotification=function deleteNotification(notificationId){return axiosService.delete(\"\".concat(API_ENDPOINT_AUTH).concat(url,\"/\").concat(notificationId));};// http://localhost:3000/users/notification-all/:userId\nexport var deleteAllNotifications=function deleteAllNotifications(userId){return axiosService.delete(\"\".concat(API_ENDPOINT_AUTH).concat(url_all,\"/\").concat(userId));};","map":{"version":3,"sources":["/Users/vyduong/Desktop/client/Home-ApumStore/src/redux/apis/notification.js"],"names":["axiosService","API_ENDPOINT_AUTH","queryString","url","url_all","getAllNotifications","params","queryParams","Object","keys","length","stringify","get","getNewestNotifications","addNotification","data","post","updateNotification","notificationId","put","updateAllNotifications","deleteNotification","delete","deleteAllNotifications","userId"],"mappings":"AAAA;AACA;AACA,MAAOA,CAAAA,YAAP,KAAyB,0BAAzB,CACA,OAAQC,iBAAR,KAAgC,uBAAhC,CACA,MAAOC,CAAAA,WAAP,KAAwB,cAAxB,CAGA,GAAMC,CAAAA,GAAG,CAAG,qBAAZ,CACA,GAAMC,CAAAA,OAAO,CAAG,yBAAhB,CACA;AACA,MAAO,IAAMC,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,EAAgB,IAAfC,CAAAA,MAAe,2DAAN,EAAM,CACjD,GAAIC,CAAAA,WAAW,CAAG,EAAlB,CACA,GAAGC,MAAM,CAACC,IAAP,CAAYH,MAAZ,EAAoBI,MAApB,CAA2B,CAA9B,CAAgC,CAC9BH,WAAW,YAAOL,WAAW,CAACS,SAAZ,CAAsBL,MAAtB,CAAP,CAAX,CACD,CACD,MAAON,CAAAA,YAAY,CAACY,GAAb,WAAoBX,iBAApB,SAAwCE,GAAxC,SAA8CI,WAA9C,EAAP,CACD,CANM,CAQP;AACA,MAAO,IAAMM,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,EAAgB,IAAfP,CAAAA,MAAe,2DAAN,EAAM,CACpD,GAAIC,CAAAA,WAAW,CAAG,EAAlB,CACA,GAAGC,MAAM,CAACC,IAAP,CAAYH,MAAZ,EAAoBI,MAApB,CAA2B,CAA9B,CAAgC,CAC9BH,WAAW,YAAOL,WAAW,CAACS,SAAZ,CAAsBL,MAAtB,CAAP,CAAX,CACD,CACD,MAAON,CAAAA,YAAY,CAACY,GAAb,WAAoBX,iBAApB,sCAAkEM,WAAlE,EAAP,CACD,CANM,CAQP;AACA,MAAO,IAAMO,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,IAAD,CAAS,CACtC,MAAOf,CAAAA,YAAY,CAACgB,IAAb,WAAqBf,iBAArB,SAAyCE,GAAzC,EAAgDY,IAAhD,CAAP,CACD,CAFM,CAIP;AACA,MAAO,IAAME,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,cAAD,CAAiBH,IAAjB,CAAyB,CACzD,MAAOf,CAAAA,YAAY,CAACmB,GAAb,WAAoBlB,iBAApB,SAAwCE,GAAxC,aAA+Ce,cAA/C,EAAiEH,IAAjE,CAAP,CACD,CAFM,CAIP;AACA,MAAO,IAAMK,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,CAACL,IAAD,CAAS,CAC7C,MAAOf,CAAAA,YAAY,CAACmB,GAAb,WAAoBlB,iBAApB,SAAwCG,OAAxC,EAAmDW,IAAnD,CAAP,CACD,CAFM,CAIP;AACA,MAAO,IAAMM,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACH,cAAD,CAAmB,CACnD,MAAOlB,CAAAA,YAAY,CAACsB,MAAb,WAAuBrB,iBAAvB,SAA2CE,GAA3C,aAAkDe,cAAlD,EAAP,CACD,CAFM,CAIP;AACA,MAAO,IAAMK,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,CAACC,MAAD,CAAW,CAC/C,MAAOxB,CAAAA,YAAY,CAACsB,MAAb,WAAuBrB,iBAAvB,SAA2CG,OAA3C,aAAsDoB,MAAtD,EAAP,CACD,CAFM","sourcesContent":["//Nơi chứa các hàm gọi API riêng biệt cho từng module\n//Module Product\nimport axiosService from '../../utils/AxiosService';\nimport {API_ENDPOINT_AUTH} from '../../constants/index';\nimport queryString from 'query-string';\n\n\nconst url = '/users/notification';\nconst url_all = '/users/notification-all';\n// http://localhost:3000/users/notification  METHOD = GET\nexport const getAllNotifications = (params = {}) =>{\n  let queryParams = '';\n  if(Object.keys(params).length>0){\n    queryParams = `?${queryString.stringify(params)}`;\n  }\n  return axiosService.get(`${API_ENDPOINT_AUTH}${url}${queryParams}`);\n};\n\n// http://localhost:3000/users/notification-newest  METHOD = GET\nexport const getNewestNotifications = (params = {}) =>{\n  let queryParams = '';\n  if(Object.keys(params).length>0){\n    queryParams = `?${queryString.stringify(params)}`;\n  }\n  return axiosService.get(`${API_ENDPOINT_AUTH}/users/notification-newest${queryParams}`);\n};\n\n// http://localhost:3000/users/notification  METHOD = POST\nexport const addNotification = (data) =>{\n  return axiosService.post(`${API_ENDPOINT_AUTH}${url}`, data);\n}\n\n// http://localhost:3000/users/notification/:notificationId\nexport const updateNotification = (notificationId, data) =>{\n  return axiosService.put(`${API_ENDPOINT_AUTH}${url}/${notificationId}`, data);\n}\n\n// http://localhost:3000/users/notification-all\nexport const updateAllNotifications = (data) =>{\n  return axiosService.put(`${API_ENDPOINT_AUTH}${url_all}`, data);\n}\n\n// http://localhost:3000/users/notification/:notificationId\nexport const deleteNotification = (notificationId) =>{\n  return axiosService.delete(`${API_ENDPOINT_AUTH}${url}/${notificationId}`);\n}\n\n// http://localhost:3000/users/notification-all/:userId\nexport const deleteAllNotifications = (userId) =>{\n  return axiosService.delete(`${API_ENDPOINT_AUTH}${url_all}/${userId}`);\n}\n"]},"metadata":{},"sourceType":"module"}