{"ast":null,"code":"var _jsxFileName = \"/Users/vyduong/Documents/HOME_ApumStoreSua/src/components/CheckoutPage/Paypal.js\";\nimport React, { useRef, useEffect } from \"react\"; // @Functions\n\nimport tryConvert from '../../utils/changeMoney';\nexport default function Paypal({\n  total_price,\n  total,\n  onCreateAnOrder,\n  order_list,\n  note,\n  authInfo,\n  shipping_address,\n  shipping_phone,\n  shipToDifferentAddress\n}) {\n  const paypal = useRef();\n  /* eslint-disable */\n\n  useEffect(() => {\n    window.paypal.Buttons({\n      createOrder: (data, actions, err) => {\n        return actions.order.create({\n          intent: \"CAPTURE\",\n          purchase_units: [{\n            description: \"Tell Me Payment\",\n            amount: {\n              currency_code: \"USD\",\n              value: total_price\n            }\n          }]\n        });\n      },\n      onApprove: async (data, actions) => {\n        // Nếu thành công thì set payment_method = paypal, isPaid = true\n        if (shipToDifferentAddress === true) {\n          data = {\n            order_list,\n            total_price: Math.round(parseInt(tryConvert(total_price, \"USD\", true)) / 10000) * 10000,\n            total_quantity: total,\n            shipping_phonenumber: shipping_phone,\n            email: authInfo.email,\n            shipping_address,\n            note,\n            status: -1,\n            payment_method: \"paypal\",\n            paid: true\n          };\n        } else {\n          data = {\n            order_list,\n            total_price: Math.round(parseInt(tryConvert(total_price, \"USD\", true)) / 10000) * 10000,\n            total_quantity: total,\n            shipping_phonenumber: authInfo.phonenumber,\n            email: authInfo.email,\n            shipping_address: authInfo.address,\n            status: -1,\n            payment_method: \"paypal\",\n            note,\n            paid: true\n          };\n        }\n\n        onCreateAnOrder(data);\n        await actions.order.capture();\n      },\n      onError: err => {}\n    }).render(paypal.current);\n  }, []);\n  /* eslint-disable */\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    ref: paypal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/vyduong/Documents/HOME_ApumStoreSua/src/components/CheckoutPage/Paypal.js"],"names":["React","useRef","useEffect","tryConvert","Paypal","total_price","total","onCreateAnOrder","order_list","note","authInfo","shipping_address","shipping_phone","shipToDifferentAddress","paypal","window","Buttons","createOrder","data","actions","err","order","create","intent","purchase_units","description","amount","currency_code","value","onApprove","Math","round","parseInt","total_quantity","shipping_phonenumber","email","status","payment_method","paid","phonenumber","address","capture","onError","render","current"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect } from \"react\";\n// @Functions\nimport tryConvert from '../../utils/changeMoney'\n\nexport default function Paypal({total_price,total, onCreateAnOrder, order_list, note, authInfo,  shipping_address, shipping_phone, shipToDifferentAddress}) {\n  const paypal = useRef();\n  /* eslint-disable */\n  useEffect(() => {\n    window.paypal.Buttons({\n        createOrder: (data, actions, err) => {\n          return actions.order.create({\n            intent: \"CAPTURE\",\n            purchase_units: [\n              {\n                description: \"Tell Me Payment\",\n                amount: {\n                  currency_code: \"USD\",\n                  value: total_price,\n                },\n              },\n            ],\n          });\n        },\n        onApprove: async (data, actions) => {\n          // Nếu thành công thì set payment_method = paypal, isPaid = true\n          if(shipToDifferentAddress === true) {\n            data = {\n              order_list,\n              total_price: Math.round(parseInt(tryConvert(total_price, \"USD\", true))/10000)* 10000,\n              total_quantity: total,\n              shipping_phonenumber: shipping_phone,\n              email: authInfo.email,\n              shipping_address,\n              note,\n              status: -1,\n              payment_method: \"paypal\",\n              paid: true\n            }\n          }\n          else{\n            data = {\n              order_list,\n              total_price: Math.round(parseInt(tryConvert(total_price, \"USD\", true))/10000)* 10000,\n              total_quantity: total,\n              shipping_phonenumber: authInfo.phonenumber,\n              email: authInfo.email,\n              shipping_address: authInfo.address,\n              status: -1,\n              payment_method: \"paypal\",\n              note,\n              paid: true\n            }\n          }\n          onCreateAnOrder(data);\n          await actions.order.capture();\n        },\n        onError: (err) => {\n        },\n      })\n      .render(paypal.current);\n  }, []);\n/* eslint-disable */\n  return (\n    <div>\n      <div ref={paypal}></div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}