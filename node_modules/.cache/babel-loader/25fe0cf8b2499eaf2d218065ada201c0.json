{"ast":null,"code":"import _regeneratorRuntime from\"/Users/vyduong/Desktop/client/Home-ApumStore/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(handleUpdate),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(handleChangePassword),_marked3=/*#__PURE__*/_regeneratorRuntime.mark(watchUpdate),_marked4=/*#__PURE__*/_regeneratorRuntime.mark(watchChangePassword),_marked5=/*#__PURE__*/_regeneratorRuntime.mark(rootSaga);import{takeEvery,fork,all,call,put}from\"redux-saga/effects\";import{get}from\"lodash\";import UsersActions,{UsersActionTypes}from\"../actions/user\";import AuthorizationActions from\"../actions/auth\";import{addImage}from\"../apis/cloudinary\";import{updateUserInfo,getUser,changePassword}from\"../apis/user\";/**\n *\n * update\n */function handleUpdate(_ref){var payload,_payload$params,firstname,lastname,phonenumber,address,email,history,result,detailResult,image,data;return _regeneratorRuntime.wrap(function handleUpdate$(_context){while(1){switch(_context.prev=_context.next){case 0:payload=_ref.payload;_payload$params=payload.params,firstname=_payload$params.firstname,lastname=_payload$params.lastname,phonenumber=_payload$params.phonenumber,address=_payload$params.address,email=_payload$params.email,history=_payload$params.history;detailResult=null;_context.prev=3;if(!payload.params.image){_context.next=15;break;}_context.next=7;return call(addImage,payload.params.image);case 7:image=_context.sent;_context.next=10;return call(updateUserInfo,{firstname:firstname,lastname:lastname,phonenumber:phonenumber,address:address,email:email,\"image\":image.data.images[0].id},payload.id);case 10:result=_context.sent;if(!(result.data.code!==200)){_context.next=13;break;}throw result.data;case 13:_context.next=21;break;case 15:_context.next=17;return call(updateUserInfo,{firstname:firstname,lastname:lastname,phonenumber:phonenumber,address:address,email:email,history:history},payload.id);case 17:result=_context.sent;data=get(result,\"data\",{});if(!(data.code!==200)){_context.next=21;break;}throw data;case 21:_context.next=23;return call(getUser,payload.id);case 23:detailResult=_context.sent;_context.next=26;return put(UsersActions.onUpdateSuccess(detailResult.data.user));case 26:_context.next=28;return put(AuthorizationActions.onGetProfile());case 28:_context.next=34;break;case 30:_context.prev=30;_context.t0=_context[\"catch\"](3);_context.next=34;return put(UsersActions.onUpdateError(_context.t0));case 34:case\"end\":return _context.stop();}}},_marked,null,[[3,30]]);}function handleChangePassword(_ref2){var payload,result,data;return _regeneratorRuntime.wrap(function handleChangePassword$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:payload=_ref2.payload;_context2.prev=1;_context2.next=4;return call(changePassword,payload);case 4:result=_context2.sent;data=get(result,\"data\",{});if(!(data.code!==200)){_context2.next=8;break;}throw data;case 8:_context2.next=10;return put(UsersActions.onChangePasswordSuccess(data.message));case 10:_context2.next=16;break;case 12:_context2.prev=12;_context2.t0=_context2[\"catch\"](1);_context2.next=16;return put(UsersActions.onChangePasswordError(_context2.t0));case 16:case\"end\":return _context2.stop();}}},_marked2,null,[[1,12]]);}/**\n *\n */export function watchUpdate(){return _regeneratorRuntime.wrap(function watchUpdate$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return takeEvery(UsersActionTypes.UPDATE,handleUpdate);case 2:case\"end\":return _context3.stop();}}},_marked3);}export function watchChangePassword(){return _regeneratorRuntime.wrap(function watchChangePassword$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return takeEvery(UsersActionTypes.CHANGE_PASSWORD,handleChangePassword);case 2:case\"end\":return _context4.stop();}}},_marked4);}export default function rootSaga(){return _regeneratorRuntime.wrap(function rootSaga$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.next=2;return all([fork(watchChangePassword),fork(watchUpdate)]);case 2:case\"end\":return _context5.stop();}}},_marked5);}","map":{"version":3,"sources":["/Users/vyduong/Desktop/client/Home-ApumStore/src/redux/sagas/user.js"],"names":["handleUpdate","handleChangePassword","watchUpdate","watchChangePassword","rootSaga","takeEvery","fork","all","call","put","get","UsersActions","UsersActionTypes","AuthorizationActions","addImage","updateUserInfo","getUser","changePassword","payload","params","firstname","lastname","phonenumber","address","email","history","detailResult","image","data","images","id","result","code","onUpdateSuccess","user","onGetProfile","onUpdateError","onChangePasswordSuccess","message","onChangePasswordError","UPDATE","CHANGE_PASSWORD"],"mappings":"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","sourcesContent":["import { takeEvery, fork, all, call, put } from \"redux-saga/effects\";\nimport { get } from \"lodash\";\nimport UsersActions, { UsersActionTypes } from \"../actions/user\";\nimport AuthorizationActions from \"../actions/auth\";\nimport { addImage } from \"../apis/cloudinary\";\nimport { updateUserInfo, getUser, changePassword } from \"../apis/user\";\n\n/**\n *\n * update\n */\nfunction* handleUpdate( {payload} ) {\n  const {firstname, lastname, phonenumber, address, email, history} = payload.params;\n  var result, detailResult = null;\n  try {\n    if(payload.params.image){\n      var image = yield call(addImage, payload.params.image);\n      result = yield call(updateUserInfo,\n      { firstname, lastname, phonenumber, address, email,\n        \"image\": image.data.images[0].id\n      }, payload.id);\n      if (result.data.code !== 200) throw result.data;\n    }\n    else{\n      result = yield call(updateUserInfo, {firstname, lastname, phonenumber, address, email, history}, payload.id);\n      const data = get(result, \"data\", {});\n      if (data.code !== 200) throw data;\n    }\n    detailResult = yield call(getUser, payload.id);\n    yield put(UsersActions.onUpdateSuccess(detailResult.data.user));\n    yield put(AuthorizationActions.onGetProfile());\n  } catch (error) {\n    yield put(UsersActions.onUpdateError(error));\n  }\n}\n\nfunction* handleChangePassword( {payload} ) {\n  try {\n    const result = yield call(changePassword, payload);\n    const data = get(result, \"data\", {});\n    if (data.code !== 200) throw data;\n    yield put(UsersActions.onChangePasswordSuccess(data.message));\n  } catch (error) {\n    yield put(UsersActions.onChangePasswordError(error));\n  }\n}\n\n/**\n *\n */\nexport function* watchUpdate() {\n  yield takeEvery(UsersActionTypes.UPDATE, handleUpdate);\n}\nexport function* watchChangePassword() {\n  yield takeEvery(UsersActionTypes.CHANGE_PASSWORD, handleChangePassword);\n}\n\nexport default function* rootSaga() {\n  yield all([\n    fork(watchChangePassword),\n    fork(watchUpdate),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}