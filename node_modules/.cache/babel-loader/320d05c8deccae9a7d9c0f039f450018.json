{"ast":null,"code":"import axios from 'axios';\nimport _ from \"lodash\";\n\nclass AxiosService {\n  constructor() {\n    this.changeHeaders = headers => {\n      if (typeof headers === \"undefined\") {\n        return;\n      }\n\n      const defaultHeaders = _.get(this.instance, \"defaults.headers\");\n\n      const cleanHeaders = _.omitBy( // xóa đi những header empty\n      { ...defaultHeaders,\n        ...headers\n      }, _.isEmpty);\n\n      return this.instance.defaults.headers = cleanHeaders;\n    };\n\n    //tạo instance (thực thể) thuộc axios\n    const instance = axios.create({\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    instance.interceptors.request.use(config => config, error => Promise.reject(error));\n    instance.interceptors.response.use(this.handleSuccess, this.handleError); //đưa instance đi khắp các fucntion trong class\n\n    this.instance = instance;\n  } //xử lý khi gọi API thành công\n\n\n  handleSuccess(response) {\n    return response;\n  } //xử lý thất bại\n\n\n  handleError(error) {\n    return Promise.reject(error);\n  }\n\n  get(url, headers) {\n    if (_.isEmpty(headers)) {\n      return this.instance.get(url);\n    }\n\n    return this.instance.get(url, headers);\n  }\n\n  post(url, body, headers) {\n    if (_.isEmpty(headers)) {\n      return this.instance.post(url, body);\n    }\n\n    return this.instance.post(url, body, headers);\n  }\n\n  put(url, body, headers) {\n    if (_.isEmpty(headers)) {\n      return this.instance.put(url, body);\n    }\n\n    return this.instance.put(url, body, headers);\n  }\n\n  delete(url, headers) {\n    if (_.isEmpty(headers)) {\n      return this.instance.delete(url);\n    }\n\n    return this.instance.delete(url, headers);\n  }\n\n}\n\nexport default new AxiosService();","map":{"version":3,"sources":["/Users/vyduong/Documents/Home-ApumStore/src/utils/AxiosService.js"],"names":["axios","_","AxiosService","constructor","changeHeaders","headers","defaultHeaders","get","instance","cleanHeaders","omitBy","isEmpty","defaults","create","interceptors","request","use","config","error","Promise","reject","response","handleSuccess","handleError","url","post","body","put","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,QAAd;;AAEA,MAAMC,YAAN,CAAmB;AACjBC,EAAAA,WAAW,GAAE;AAAA,SAuDdC,aAvDc,GAuDEC,OAAO,IAAI;AAC1B,UAAI,OAAOA,OAAP,KAAmB,WAAvB,EAAoC;AACnC;AACA;;AACD,YAAMC,cAAc,GAAGL,CAAC,CAACM,GAAF,CAAM,KAAKC,QAAX,EAAqB,kBAArB,CAAvB;;AACA,YAAMC,YAAY,GAAGR,CAAC,CAACS,MAAF,EAAW;AAC/B,QACC,GAAGJ,cADJ;AAEC,WAAGD;AAFJ,OADoB,EAKpBJ,CAAC,CAACU,OALkB,CAArB;;AAOA,aAAO,KAAKH,QAAL,CAAcI,QAAd,CAAuBP,OAAvB,GAAiCI,YAAxC;AACA,KApEa;;AACb;AACA,UAAMD,QAAQ,GAAGR,KAAK,CAACa,MAAN,CAAa;AAC7BR,MAAAA,OAAO,EAAE;AACR,wBAAgB;AADR;AADoB,KAAb,CAAjB;AAKAG,IAAAA,QAAQ,CAACM,YAAT,CAAsBC,OAAtB,CAA8BC,GAA9B,CACCC,MAAM,IAAIA,MADX,EAECC,KAAK,IAAIC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAFV;AAIAV,IAAAA,QAAQ,CAACM,YAAT,CAAsBO,QAAtB,CAA+BL,GAA/B,CAAmC,KAAKM,aAAxC,EACC,KAAKC,WADN,EAXa,CAab;;AACA,SAAKf,QAAL,GAAgBA,QAAhB;AACA,GAhBiB,CAkBlB;;;AACAc,EAAAA,aAAa,CAACD,QAAD,EAAU;AACtB,WAAOA,QAAP;AACA,GArBiB,CAuBlB;;;AACAE,EAAAA,WAAW,CAACL,KAAD,EAAO;AACjB,WAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACA;;AAEDX,EAAAA,GAAG,CAACiB,GAAD,EAAMnB,OAAN,EAAc;AAChB,QAAIJ,CAAC,CAACU,OAAF,CAAUN,OAAV,CAAJ,EAAwB;AACvB,aAAO,KAAKG,QAAL,CAAcD,GAAd,CAAkBiB,GAAlB,CAAP;AACA;;AACD,WAAO,KAAKhB,QAAL,CAAcD,GAAd,CAAkBiB,GAAlB,EAAuBnB,OAAvB,CAAP;AACA;;AAEDoB,EAAAA,IAAI,CAACD,GAAD,EAAME,IAAN,EAAYrB,OAAZ,EAAoB;AACvB,QAAIJ,CAAC,CAACU,OAAF,CAAUN,OAAV,CAAJ,EAAwB;AACvB,aAAO,KAAKG,QAAL,CAAciB,IAAd,CAAmBD,GAAnB,EAAwBE,IAAxB,CAAP;AACA;;AACD,WAAO,KAAKlB,QAAL,CAAciB,IAAd,CAAmBD,GAAnB,EAAwBE,IAAxB,EAA8BrB,OAA9B,CAAP;AACA;;AAEDsB,EAAAA,GAAG,CAACH,GAAD,EAAME,IAAN,EAAYrB,OAAZ,EAAoB;AACtB,QAAIJ,CAAC,CAACU,OAAF,CAAUN,OAAV,CAAJ,EAAwB;AACvB,aAAO,KAAKG,QAAL,CAAcmB,GAAd,CAAkBH,GAAlB,EAAuBE,IAAvB,CAAP;AACA;;AACD,WAAO,KAAKlB,QAAL,CAAcmB,GAAd,CAAkBH,GAAlB,EAAuBE,IAAvB,EAA6BrB,OAA7B,CAAP;AACA;;AAEDuB,EAAAA,MAAM,CAACJ,GAAD,EAAMnB,OAAN,EAAc;AACnB,QAAIJ,CAAC,CAACU,OAAF,CAAUN,OAAV,CAAJ,EAAwB;AACvB,aAAO,KAAKG,QAAL,CAAcoB,MAAd,CAAqBJ,GAArB,CAAP;AACA;;AACD,WAAO,KAAKhB,QAAL,CAAcoB,MAAd,CAAqBJ,GAArB,EAA0BnB,OAA1B,CAAP;AACA;;AAtDiB;;AAwEnB,eAAe,IAAIH,YAAJ,EAAf","sourcesContent":["import axios from 'axios';\nimport _ from \"lodash\";\n\nclass AxiosService {\n  constructor(){\n\t\t//tạo instance (thực thể) thuộc axios\n\t\tconst instance = axios.create({\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t},\n\t\t});\n\t\tinstance.interceptors.request.use(\n\t\t\tconfig => config,\n\t\t\terror => Promise.reject(error)\n\t\t);\n\t\tinstance.interceptors.response.use(this.handleSuccess,\n\t\t\tthis.handleError);\n\t\t//đưa instance đi khắp các fucntion trong class\n\t\tthis.instance = instance;\n\t}\n\n\t//xử lý khi gọi API thành công\n\thandleSuccess(response){\n\t\treturn response;\n\t}\n\n\t//xử lý thất bại\n\thandleError(error){\n\t\treturn Promise.reject(error);\n\t}\n\n\tget(url, headers){\n\t\tif (_.isEmpty(headers)) {\n\t\t\treturn this.instance.get(url);\n\t\t}\n\t\treturn this.instance.get(url, headers);\n\t}\n\n\tpost(url, body, headers){\n\t\tif (_.isEmpty(headers)) {\n\t\t\treturn this.instance.post(url, body);\n\t\t}\n\t\treturn this.instance.post(url, body, headers);\n\t}\n\n\tput(url, body, headers){\n\t\tif (_.isEmpty(headers)) {\n\t\t\treturn this.instance.put(url, body);\n\t\t}\n\t\treturn this.instance.put(url, body, headers);\n\t}\n\n\tdelete(url, headers){\n\t\tif (_.isEmpty(headers)) {\n\t\t\treturn this.instance.delete(url);\n\t\t}\n\t\treturn this.instance.delete(url, headers);\n\t}\n\n\tchangeHeaders = headers => {\n\t\tif (typeof headers === \"undefined\") {\n\t\t\treturn;\n\t\t}\n\t\tconst defaultHeaders = _.get(this.instance, \"defaults.headers\");\n\t\tconst cleanHeaders = _.omitBy(  // xóa đi những header empty\n\t\t\t{\n\t\t\t\t...defaultHeaders,\n\t\t\t\t...headers\n\t\t\t},\n\t\t\t_.isEmpty\n\t\t);\n\t\treturn this.instance.defaults.headers = cleanHeaders;\n\t};\n}\n\nexport default new AxiosService();"]},"metadata":{},"sourceType":"module"}