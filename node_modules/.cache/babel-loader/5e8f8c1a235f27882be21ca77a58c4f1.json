{"ast":null,"code":"import { NotificationActionTypes } from \"../actions/notification\";\nimport { toastError } from '../../utils/toastHelper';\nconst init = {\n  loading: true,\n  detail: null,\n  processing: false\n};\nexport default function (state = init, action) {\n  switch (action.type) {\n    case NotificationActionTypes.CLEAR_DETAIL:\n      return { ...state,\n        detail: null,\n        loadingDetail: true\n      };\n\n    case NotificationActionTypes.CLEAR_STATE:\n      return { ...init\n      };\n\n    case NotificationActionTypes.GET_NEWEST:\n    case NotificationActionTypes.GET_LIST:\n    case NotificationActionTypes.CREATE:\n    case NotificationActionTypes.UPDATE:\n    case NotificationActionTypes.UPDATE_ALL:\n    case NotificationActionTypes.DELETE:\n    case NotificationActionTypes.DELETE_ALL:\n      return { ...state,\n        loading: true\n      };\n\n    case NotificationActionTypes.GET_NEWEST_SUCCESS:\n      return { ...state,\n        detail: action.payload.detail,\n        _total: action.payload.total\n      };\n\n    case NotificationActionTypes.GET_LIST_SUCCESS:\n      return { ...state,\n        list: action.payload.list,\n        total: action.payload.total\n      };\n\n    case NotificationActionTypes.CREATE_SUCCESS:\n    case NotificationActionTypes.UPDATE_SUCCESS:\n    case NotificationActionTypes.UPDATE_ALL_SUCCESS:\n    case NotificationActionTypes.DELETE_SUCCESS:\n    case NotificationActionTypes.DELETE_ALL_SUCCESS:\n      return { ...state,\n        processing: true\n      };\n\n    case NotificationActionTypes.GET_NEWEST_ERROR:\n    case NotificationActionTypes.CREATE_ERROR:\n    case NotificationActionTypes.GET_LIST_ERROR:\n    case NotificationActionTypes.UPDATE_ERROR:\n    case NotificationActionTypes.UPDATE_ALL_ERROR:\n    case NotificationActionTypes.DELETE_ERROR:\n    case NotificationActionTypes.DELETE_ALL_ERROR:\n      var {\n        message\n      } = action.payload;\n      toastError(message);\n      return { ...state,\n        processing: false\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/vyduong/Documents/HOME_ApumStoreSua/src/redux/reducers/notification.js"],"names":["NotificationActionTypes","toastError","init","loading","detail","processing","state","action","type","CLEAR_DETAIL","loadingDetail","CLEAR_STATE","GET_NEWEST","GET_LIST","CREATE","UPDATE","UPDATE_ALL","DELETE","DELETE_ALL","GET_NEWEST_SUCCESS","payload","_total","total","GET_LIST_SUCCESS","list","CREATE_SUCCESS","UPDATE_SUCCESS","UPDATE_ALL_SUCCESS","DELETE_SUCCESS","DELETE_ALL_SUCCESS","GET_NEWEST_ERROR","CREATE_ERROR","GET_LIST_ERROR","UPDATE_ERROR","UPDATE_ALL_ERROR","DELETE_ERROR","DELETE_ALL_ERROR","message"],"mappings":"AAAA,SAASA,uBAAT,QAAwC,yBAAxC;AACA,SAASC,UAAT,QAA2B,yBAA3B;AAEA,MAAMC,IAAI,GAAG;AACXC,EAAAA,OAAO,EAAE,IADE;AAEXC,EAAAA,MAAM,EAAE,IAFG;AAGXC,EAAAA,UAAU,EAAE;AAHD,CAAb;AAMA,eAAe,UAASC,KAAK,GAAGJ,IAAjB,EAAuBK,MAAvB,EAA+B;AAC5C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,uBAAuB,CAACS,YAA7B;AACE,aAAO,EACL,GAAGH,KADE;AAELF,QAAAA,MAAM,EAAE,IAFH;AAGLM,QAAAA,aAAa,EAAE;AAHV,OAAP;;AAKF,SAAKV,uBAAuB,CAACW,WAA7B;AACE,aAAO,EACL,GAAGT;AADE,OAAP;;AAGF,SAAKF,uBAAuB,CAACY,UAA7B;AACA,SAAKZ,uBAAuB,CAACa,QAA7B;AACA,SAAKb,uBAAuB,CAACc,MAA7B;AACA,SAAKd,uBAAuB,CAACe,MAA7B;AACA,SAAKf,uBAAuB,CAACgB,UAA7B;AACA,SAAKhB,uBAAuB,CAACiB,MAA7B;AACA,SAAKjB,uBAAuB,CAACkB,UAA7B;AACE,aAAO,EACL,GAAGZ,KADE;AAELH,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF,SAAKH,uBAAuB,CAACmB,kBAA7B;AACE,aAAO,EACL,GAAGb,KADE;AAELF,QAAAA,MAAM,EAAEG,MAAM,CAACa,OAAP,CAAehB,MAFlB;AAGLiB,QAAAA,MAAM,EAAEd,MAAM,CAACa,OAAP,CAAeE;AAHlB,OAAP;;AAKF,SAAKtB,uBAAuB,CAACuB,gBAA7B;AACE,aAAO,EACL,GAAGjB,KADE;AAELkB,QAAAA,IAAI,EAAEjB,MAAM,CAACa,OAAP,CAAeI,IAFhB;AAGLF,QAAAA,KAAK,EAAEf,MAAM,CAACa,OAAP,CAAeE;AAHjB,OAAP;;AAKF,SAAKtB,uBAAuB,CAACyB,cAA7B;AACA,SAAKzB,uBAAuB,CAAC0B,cAA7B;AACA,SAAK1B,uBAAuB,CAAC2B,kBAA7B;AACA,SAAK3B,uBAAuB,CAAC4B,cAA7B;AACA,SAAK5B,uBAAuB,CAAC6B,kBAA7B;AACE,aAAO,EACL,GAAGvB,KADE;AAELD,QAAAA,UAAU,EAAE;AAFP,OAAP;;AAIF,SAAKL,uBAAuB,CAAC8B,gBAA7B;AACA,SAAK9B,uBAAuB,CAAC+B,YAA7B;AACA,SAAK/B,uBAAuB,CAACgC,cAA7B;AACA,SAAKhC,uBAAuB,CAACiC,YAA7B;AACA,SAAKjC,uBAAuB,CAACkC,gBAA7B;AACA,SAAKlC,uBAAuB,CAACmC,YAA7B;AACA,SAAKnC,uBAAuB,CAACoC,gBAA7B;AACE,UAAI;AAAEC,QAAAA;AAAF,UAAc9B,MAAM,CAACa,OAAzB;AACAnB,MAAAA,UAAU,CAACoC,OAAD,CAAV;AACA,aAAO,EACL,GAAG/B,KADE;AAELD,QAAAA,UAAU,EAAE;AAFP,OAAP;;AAIF;AACE,aAAOC,KAAP;AAzDJ;AA2DD","sourcesContent":["import { NotificationActionTypes } from \"../actions/notification\";\nimport { toastError } from '../../utils/toastHelper';\n\nconst init = {\n  loading: true,\n  detail: null,\n  processing: false,\n};\n\nexport default function(state = init, action) {\n  switch (action.type) {\n    case NotificationActionTypes.CLEAR_DETAIL:\n      return {\n        ...state,\n        detail: null,\n        loadingDetail: true,\n      };\n    case NotificationActionTypes.CLEAR_STATE:\n      return {\n        ...init,\n      };\n    case NotificationActionTypes.GET_NEWEST:\n    case NotificationActionTypes.GET_LIST:\n    case NotificationActionTypes.CREATE:\n    case NotificationActionTypes.UPDATE:\n    case NotificationActionTypes.UPDATE_ALL:\n    case NotificationActionTypes.DELETE:\n    case NotificationActionTypes.DELETE_ALL:\n      return {\n        ...state,\n        loading: true,\n      };\n    case NotificationActionTypes.GET_NEWEST_SUCCESS:\n      return {\n        ...state,\n        detail: action.payload.detail,\n        _total: action.payload.total\n      };\n    case NotificationActionTypes.GET_LIST_SUCCESS:\n      return {\n        ...state,\n        list: action.payload.list,\n        total: action.payload.total\n      };\n    case NotificationActionTypes.CREATE_SUCCESS:\n    case NotificationActionTypes.UPDATE_SUCCESS:\n    case NotificationActionTypes.UPDATE_ALL_SUCCESS:\n    case NotificationActionTypes.DELETE_SUCCESS:\n    case NotificationActionTypes.DELETE_ALL_SUCCESS:\n      return {\n        ...state,\n        processing: true,\n      };\n    case NotificationActionTypes.GET_NEWEST_ERROR:\n    case NotificationActionTypes.CREATE_ERROR:\n    case NotificationActionTypes.GET_LIST_ERROR:  \n    case NotificationActionTypes.UPDATE_ERROR:\n    case NotificationActionTypes.UPDATE_ALL_ERROR:  \n    case NotificationActionTypes.DELETE_ERROR:  \n    case NotificationActionTypes.DELETE_ALL_ERROR:\n      var { message } = action.payload;\n      toastError(message);\n      return {\n        ...state,\n        processing: false,\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}