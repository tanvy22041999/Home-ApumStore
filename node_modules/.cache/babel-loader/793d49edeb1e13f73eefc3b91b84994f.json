{"ast":null,"code":"import { takeEvery, fork, all, call, put } from \"redux-saga/effects\";\nimport { get } from \"lodash\";\nimport AdActions, { AdActionTypes } from \"../actions/ad\";\nimport { getAllAds } from \"../apis/ad\";\n\nfunction* handleGetList({\n  payload\n}) {\n  try {\n    const result = yield call(getAllAds, payload);\n    const data = get(result, \"data\");\n    if (data.code !== 200) throw data;\n    yield put(AdActions.onGetListSuccess(data.ads));\n  } catch (error) {\n    yield put(AdActions.onGetListError(error));\n  }\n}\n\nexport function* watchGetList() {\n  yield takeEvery(AdActionTypes.GET_LIST, handleGetList);\n}\nexport default function* rootSaga() {\n  yield all([fork(watchGetList)]);\n}","map":{"version":3,"sources":["/Users/vyduong/Desktop/DOChoi_FE/WebBanDienThoai-master 2/FE_WebBanDienThoai/src/redux/sagas/ad.js"],"names":["takeEvery","fork","all","call","put","get","AdActions","AdActionTypes","getAllAds","handleGetList","payload","result","data","code","onGetListSuccess","ads","error","onGetListError","watchGetList","GET_LIST","rootSaga"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,EAA+BC,IAA/B,EAAqCC,GAArC,QAAgD,oBAAhD;AACA,SAASC,GAAT,QAAoB,QAApB;AACA,OAAOC,SAAP,IAAoBC,aAApB,QAAyC,eAAzC;AACA,SAASC,SAAT,QAA0B,YAA1B;;AAEA,UAAUC,aAAV,CAAwB;AAAEC,EAAAA;AAAF,CAAxB,EAAqC;AACnC,MAAI;AACF,UAAMC,MAAM,GAAG,MAAMR,IAAI,CAACK,SAAD,EAAYE,OAAZ,CAAzB;AACA,UAAME,IAAI,GAAGP,GAAG,CAACM,MAAD,EAAS,MAAT,CAAhB;AACA,QAAIC,IAAI,CAACC,IAAL,KAAc,GAAlB,EAAuB,MAAMD,IAAN;AACvB,UAAMR,GAAG,CAACE,SAAS,CAACQ,gBAAV,CAA2BF,IAAI,CAACG,GAAhC,CAAD,CAAT;AACD,GALD,CAKE,OAAOC,KAAP,EAAc;AACd,UAAMZ,GAAG,CAACE,SAAS,CAACW,cAAV,CAAyBD,KAAzB,CAAD,CAAT;AACD;AACF;;AAGD,OAAO,UAAUE,YAAV,GAAyB;AAC9B,QAAMlB,SAAS,CAACO,aAAa,CAACY,QAAf,EAAyBV,aAAzB,CAAf;AACD;AAGD,eAAe,UAAUW,QAAV,GAAqB;AAClC,QAAMlB,GAAG,CAAC,CACRD,IAAI,CAACiB,YAAD,CADI,CAAD,CAAT;AAGD","sourcesContent":["import { takeEvery, fork, all, call, put } from \"redux-saga/effects\";\nimport { get } from \"lodash\";\nimport AdActions, { AdActionTypes } from \"../actions/ad\";\nimport { getAllAds } from \"../apis/ad\";\n\nfunction* handleGetList({ payload }) {\n  try {\n    const result = yield call(getAllAds, payload);\n    const data = get(result, \"data\");\n    if (data.code !== 200) throw data;\n    yield put(AdActions.onGetListSuccess(data.ads));\n  } catch (error) {\n    yield put(AdActions.onGetListError(error));\n  }\n}\n\n\nexport function* watchGetList() {\n  yield takeEvery(AdActionTypes.GET_LIST, handleGetList);\n}\n\n\nexport default function* rootSaga() {\n  yield all([\n    fork(watchGetList),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}