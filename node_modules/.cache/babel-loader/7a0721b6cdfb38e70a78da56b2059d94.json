{"ast":null,"code":"import { takeEvery, fork, all, call, put } from \"redux-saga/effects\";\nimport { get } from \"lodash\";\nimport AddressActions, { AddressActionTypes } from \"../actions/address\";\nimport { getAllCity, getDistrictByCity, getWardByCityAndDistrict, getShippingFee } from \"../apis/address\";\n\nfunction* handleGetListCity() {\n  try {\n    const result = yield call(getAllCity);\n    const data = get(result, \"data\");\n    if (data.code !== 200) throw data;\n    yield put(AddressActions.onGetCitySuccess(data.data));\n  } catch (error) {\n    yield put(AddressActions.onGetCityError(error));\n  }\n}\n\nfunction* handleGetListDistrict({\n  payload\n}) {\n  try {\n    const result = yield call(getDistrictByCity, payload);\n    const data = get(result, \"data\");\n    if (data.code !== 200) throw data;\n    yield put(AddressActions.onGetDistrictSuccess(data.data));\n  } catch (error) {\n    yield put(AddressActions.onGetDistrictError(error));\n  }\n}\n\nfunction* handleGetListWard({\n  payload\n}) {\n  try {\n    const result = yield call(getWardByCityAndDistrict, payload.cityID, payload.districtID);\n    const data = get(result, \"data\");\n    if (data.code !== 200) throw data;\n    yield put(AddressActions.onGetWardSuccess(data.data));\n  } catch (error) {\n    yield put(AddressActions.onGetWardError(error));\n  }\n}\n\nfunction* handleCalculateShipping({\n  payload\n}) {\n  try {\n    const result = yield call(getShippingFee, payload);\n    const data = get(result, \"data\");\n    if (data.code !== 200) throw data;\n    yield put(AddressActions.onCalculateShippingSuccess(data.data));\n  } catch (error) {\n    yield put(AddressActions.onCalculateShippingError(error));\n  }\n}\n\nexport function* watchGetListCity() {\n  yield takeEvery(AddressActionTypes.GET_CITY, handleGetListCity);\n}\nexport function* watchGetListDistrict() {\n  yield takeEvery(AddressActionTypes.GET_DISTRICT, handleGetListDistrict);\n}\nexport function* watchGetListWard() {\n  yield takeEvery(AddressActionTypes.GET_WARD, handleGetListWard);\n}\nexport function* watchCalculateShipping() {\n  yield takeEvery(AddressActionTypes.CALCULATE_SHIPPING, handleCalculateShipping);\n}\nexport default function* rootSaga() {\n  yield all([fork(watchGetListCity), fork(watchGetListDistrict), fork(watchGetListWard), fork(watchCalculateShipping)]);\n}","map":{"version":3,"sources":["/Users/vyduong/Documents/HOME_ApumStoreSua/src/redux/sagas/address.js"],"names":["takeEvery","fork","all","call","put","get","AddressActions","AddressActionTypes","getAllCity","getDistrictByCity","getWardByCityAndDistrict","getShippingFee","handleGetListCity","result","data","code","onGetCitySuccess","error","onGetCityError","handleGetListDistrict","payload","onGetDistrictSuccess","onGetDistrictError","handleGetListWard","cityID","districtID","onGetWardSuccess","onGetWardError","handleCalculateShipping","onCalculateShippingSuccess","onCalculateShippingError","watchGetListCity","GET_CITY","watchGetListDistrict","GET_DISTRICT","watchGetListWard","GET_WARD","watchCalculateShipping","CALCULATE_SHIPPING","rootSaga"],"mappings":"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","sourcesContent":["import { takeEvery, fork, all, call, put } from \"redux-saga/effects\";\nimport { get } from \"lodash\";\nimport AddressActions, { AddressActionTypes } from \"../actions/address\";\nimport { getAllCity, getDistrictByCity, getWardByCityAndDistrict, getShippingFee } from \"../apis/address\";\n\nfunction* handleGetListCity() {\n  try {\n    const result = yield call(getAllCity);\n    const data = get(result, \"data\");\n    if (data.code !== 200) throw data;\n    yield put(AddressActions.onGetCitySuccess(data.data));\n  } catch (error) {\n    yield put(AddressActions.onGetCityError(error));\n  }\n}\n\nfunction* handleGetListDistrict({payload}) {\n  try {\n    const result = yield call(getDistrictByCity, payload);\n    const data = get(result, \"data\");\n    if (data.code !== 200) throw data;\n    yield put(AddressActions.onGetDistrictSuccess(data.data));\n  } catch (error) {\n    yield put(AddressActions.onGetDistrictError(error));\n  }\n}\n\nfunction* handleGetListWard({payload}) {\n  try {\n    const result = yield call(getWardByCityAndDistrict,payload.cityID,payload.districtID );\n    const data = get(result, \"data\");\n    if (data.code !== 200) throw data;\n    yield put(AddressActions.onGetWardSuccess(data.data));\n  } catch (error) {\n    yield put(AddressActions.onGetWardError(error));\n  }\n}\n\nfunction* handleCalculateShipping({payload}) {\n  try {\n    const result = yield call(getShippingFee,payload);\n    const data = get(result, \"data\");\n    if (data.code !== 200) throw data;\n    yield put(AddressActions.onCalculateShippingSuccess(data.data));\n  } catch (error) {\n    yield put(AddressActions.onCalculateShippingError(error));\n  }\n}\n\nexport function* watchGetListCity() {\n  yield takeEvery(AddressActionTypes.GET_CITY, handleGetListCity);\n}\nexport function* watchGetListDistrict() {\n  yield takeEvery(AddressActionTypes.GET_DISTRICT, handleGetListDistrict);\n}\nexport function* watchGetListWard() {\n  yield takeEvery(AddressActionTypes.GET_WARD, handleGetListWard);\n}\nexport function* watchCalculateShipping() {\n  yield takeEvery(AddressActionTypes.CALCULATE_SHIPPING, handleCalculateShipping);\n}\n\nexport default function* rootSaga() {\n  yield all([\n    fork(watchGetListCity),\n    fork(watchGetListDistrict),\n    fork(watchGetListWard),\n    fork(watchCalculateShipping),\n  ]);\n}"]},"metadata":{},"sourceType":"module"}