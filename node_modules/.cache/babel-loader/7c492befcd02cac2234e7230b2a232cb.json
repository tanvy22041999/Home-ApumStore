{"ast":null,"code":"var _jsxFileName = \"/Users/vyduong/Documents/HOME_ApumStoreSua/src/containers/UserDetail/index.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { withTranslation } from 'react-i18next'; // @Actions\n\nimport UsersActions from '../../redux/actions/user';\nimport AddressActions from \"../../redux/actions/address\";\n\nclass UserDetail extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setDistrict = event => {\n      const {\n        value,\n        options,\n        selectedIndex\n      } = event.target;\n      const {\n        onGetListDistrict\n      } = this.props;\n      this.setState({\n        cityID: value,\n        city: options[selectedIndex].text,\n        district: \"\"\n      });\n      onGetListDistrict({\n        province_id: event.target.value\n      });\n    };\n\n    this.setWard = event => {\n      const {\n        options,\n        selectedIndex,\n        value\n      } = event.target;\n      const {\n        onGetListWard\n      } = this.props;\n      const {\n        cityID\n      } = this.state;\n      this.setState({\n        district: options[selectedIndex].text,\n        districtID: value\n      });\n      onGetListWard(cityID, event.target.value);\n    };\n\n    this.setAddress = event => {\n      const {\n        options,\n        selectedIndex,\n        value\n      } = event.target;\n      this.setState({\n        ward: options[selectedIndex].text,\n        wardID: value\n      });\n    };\n\n    this.onChange = event => {\n      var target = event.target;\n      var name = target.name;\n      var value = target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.updateProfile = () => {\n      const {\n        userInfo,\n        onUpdate\n      } = this.props;\n      const {\n        firstname,\n        lastname,\n        phonenumber,\n        address,\n        ward,\n        city,\n        district,\n        email\n      } = this.state;\n      /* Xử lý ảnh */\n\n      const {\n        selectedFile\n      } = this.props;\n      var formData = new FormData();\n      formData.append(\"image\", selectedFile);\n      /* Xử lý ảnh */\n\n      var data = {\n        firstname,\n        lastname,\n        phonenumber,\n        address: `${address.replaceAll(',', '')}, ${ward}, ${district}, ${city}`,\n        email,\n        image: selectedFile ? formData : null\n      };\n      onUpdate(userInfo._id, data);\n    };\n\n    const {\n      userInfo: _userInfo,\n      listCity\n    } = props;\n    var lastCity;\n\n    if (_userInfo.address) {\n      lastCity = listCity.find(obj => obj.ProvinceName === _userInfo.address.split(', ')[3]).ProvinceID;\n    } else {\n      lastCity = -1;\n    }\n\n    this.state = {\n      firstname: _userInfo ? _userInfo.firstname : \"\",\n      lastname: _userInfo ? _userInfo.lastname : \"\",\n      phonenumber: _userInfo ? _userInfo.phonenumber : \"\",\n      address: _userInfo && _userInfo.address ? _userInfo.address.split(', ')[0] : \"\",\n      email: _userInfo ? _userInfo.email : \"\",\n      cityID: lastCity,\n      districtID: null,\n      wardID: null,\n      city: _userInfo && _userInfo.address ? _userInfo.address.split(', ')[3] : \"\",\n      district: _userInfo && _userInfo.address ? _userInfo.address.split(', ')[2] : \"\",\n      ward: _userInfo && _userInfo.address ? _userInfo.address.split(', ')[1] : \"\"\n    };\n  }\n\n  componentDidMount() {\n    const {\n      onGetListDistrict\n    } = this.props;\n    const {\n      cityID\n    } = this.state;\n\n    if (cityID) {\n      onGetListDistrict({\n        province_id: cityID\n      });\n    }\n  }\n\n  componentWillReceiveProps(props) {\n    const {\n      listDistrict,\n      userInfo,\n      listCity\n    } = props;\n    var lastCity;\n\n    if (userInfo.address) {\n      lastCity = listCity.find(obj => obj.ProvinceName === userInfo.address.split(', ')[3]).ProvinceID;\n      const {\n        cityID,\n        districtID,\n        wardID\n      } = this.state;\n      const {\n        onGetListWard\n      } = this.props;\n\n      if (this.props.listDistrict !== props.listDistrict && cityID === lastCity) {\n        onGetListWard(cityID, listDistrict.find(obj => obj.DistrictName === userInfo.address.split(', ')[2]).DistrictID);\n      }\n\n      if (districtID === null && wardID === null && props.listWard) {\n        this.setState({\n          districtID: this.props.listDistrict.find(obj => obj.DistrictName === userInfo.address.split(', ')[2]).DistrictID,\n          wardID: props.listWard.find(obj => obj.WardName === userInfo.address.split(', ')[1]).WardCode\n        });\n      }\n    } else {\n      lastCity = -1;\n    }\n  }\n\n  render() {\n    const {\n      firstname,\n      lastname,\n      phonenumber,\n      address,\n      email,\n      cityID,\n      districtID,\n      wardID\n    } = this.state;\n    const {\n      t,\n      listCity,\n      listDistrict,\n      listWard\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row py-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-floating\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      id: \"firstname\",\n      name: \"firstname\",\n      value: firstname,\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"firstname\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 15\n      }\n    }, t('checkout.firstname.input')))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-floating\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      id: \"lastname\",\n      name: \"lastname\",\n      value: lastname,\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"lastname\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 15\n      }\n    }, t('checkout.lastname.input'))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row py-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-floating\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"tel\",\n      className: \"form-control\",\n      id: \"phonenumber\",\n      name: \"phonenumber\",\n      value: phonenumber,\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"phonenumber\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 15\n      }\n    }, t('checkout.phone.input')))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-floating\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"email\",\n      className: \"form-control\",\n      id: \"email\",\n      name: \"email\",\n      value: email,\n      onChange: this.onChange,\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 15\n      }\n    }, \"Email\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row py-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-floating\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      id: \"address\",\n      name: \"address\",\n      value: address,\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"address\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 15\n      }\n    }, t('checkout.address.input'))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row py-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-floating\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      className: \"form-select\",\n      type: \"text\",\n      id: \"city\",\n      value: cityID,\n      onChange: this.setDistrict,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 15\n      }\n    }, listCity && listCity.map((item, index) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: index,\n        value: item.ProvinceID,\n        name: \"city\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 23\n        }\n      }, item.ProvinceName);\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"city\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 15\n      }\n    }, \"T\\u1EC9nh th\\xE0nh\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-floating\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      className: \"form-select\",\n      type: \"text\",\n      id: \"district\",\n      value: districtID ? districtID : null,\n      onChange: this.setWard,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 15\n      }\n    }, listDistrict && listDistrict.map((item, index) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: index,\n        value: item.DistrictID,\n        name: \"district\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 25\n        }\n      }, item.DistrictName);\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"district\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 15\n      }\n    }, \"Qu\\u1EADn huy\\u1EC7n\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-floating\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      className: \"form-select\",\n      type: \"text\",\n      id: \"ward\",\n      value: wardID ? wardID : null,\n      onChange: this.setAddress,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 15\n      }\n    }, listWard && listWard.map((item, index) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: index,\n        value: item.WardCode,\n        name: \"ward\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 25\n        }\n      }, item.WardName);\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"ward\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 15\n      }\n    }, \"Ph\\u01B0\\u1EDDng x\\xE3\")))), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-success\",\n      \"data-bs-dismiss\": \"modal\",\n      onClick: () => this.updateProfile(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }\n    }, t('user.save-change.button')));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    listDistrict: state.address.district,\n    listWard: state.address.ward\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onUpdate: (id, params) => {\n      dispatch(UsersActions.onUpdate({\n        id,\n        params\n      }));\n    },\n    onGetListDistrict: cityID => {\n      dispatch(AddressActions.onGetDistrict(cityID));\n    },\n    onGetListWard: (cityID, districtID) => {\n      dispatch(AddressActions.onGetWard(cityID, districtID));\n    }\n  };\n};\n\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\nexport default compose(withConnect, withTranslation())(UserDetail);","map":{"version":3,"sources":["/Users/vyduong/Documents/HOME_ApumStoreSua/src/containers/UserDetail/index.js"],"names":["React","Component","connect","compose","withTranslation","UsersActions","AddressActions","UserDetail","constructor","props","setDistrict","event","value","options","selectedIndex","target","onGetListDistrict","setState","cityID","city","text","district","province_id","setWard","onGetListWard","state","districtID","setAddress","ward","wardID","onChange","name","updateProfile","userInfo","onUpdate","firstname","lastname","phonenumber","address","email","selectedFile","formData","FormData","append","data","replaceAll","image","_id","listCity","lastCity","find","obj","ProvinceName","split","ProvinceID","componentDidMount","componentWillReceiveProps","listDistrict","DistrictName","DistrictID","listWard","WardName","WardCode","render","t","map","item","index","mapStateToProps","mapDispatchToProps","dispatch","id","params","onGetDistrict","onGetWard","withConnect"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport {compose} from 'redux';\nimport { withTranslation } from 'react-i18next'\n// @Actions\nimport UsersActions from '../../redux/actions/user';\nimport AddressActions from \"../../redux/actions/address\";\n\nclass UserDetail extends Component {\n  constructor(props) {\n    super(props);\n    const {userInfo, listCity} = props;\n    var lastCity;\n    if(userInfo.address){\n      lastCity = listCity.find(obj => obj.ProvinceName === userInfo.address.split(', ')[3]).ProvinceID;\n    }\n    else{\n      lastCity = -1;\n    }\n    this.state = {\n      firstname: userInfo ? userInfo.firstname :\"\",\n      lastname: userInfo ? userInfo.lastname :\"\",\n      phonenumber: userInfo ? userInfo.phonenumber :\"\",\n      address: userInfo && userInfo.address ? userInfo.address.split(', ')[0] :\"\",\n      email: userInfo ? userInfo.email :\"\",\n      cityID: lastCity,\n      districtID: null,\n      wardID: null,\n      city: userInfo && userInfo.address ? userInfo.address.split(', ')[3] : \"\",\n      district: userInfo && userInfo.address ? userInfo.address.split(', ')[2] : \"\",\n      ward: userInfo && userInfo.address ? userInfo.address.split(', ')[1] : \"\"\n    }\n  }\n\n  componentDidMount(){\n    const {onGetListDistrict} = this.props;\n    const {cityID} = this.state;\n    if(cityID){\n      onGetListDistrict({province_id: cityID})\n    }\n  }\n\n  componentWillReceiveProps(props){\n    const {listDistrict, userInfo, listCity} = props;\n    var lastCity;\n    if(userInfo.address){\n      lastCity = listCity.find(obj => obj.ProvinceName === userInfo.address.split(', ')[3]).ProvinceID;\n      const {cityID, districtID, wardID} = this.state;\n      const {onGetListWard} = this.props;\n      if(this.props.listDistrict !== props.listDistrict && cityID === lastCity){\n        onGetListWard(cityID, listDistrict.find(obj => obj.DistrictName === userInfo.address.split(', ')[2]).DistrictID)\n      }\n      if(districtID===null && wardID===null && props.listWard){\n        this.setState({\n          districtID: this.props.listDistrict.find(obj => obj.DistrictName === userInfo.address.split(', ')[2]).DistrictID,\n          wardID: props.listWard.find(obj => obj.WardName === userInfo.address.split(', ')[1]).WardCode\n        })\n      }\n    }\n    else{\n      lastCity = -1;\n    }\n  }\n\n  setDistrict = (event) =>{\n    const {value, options, selectedIndex} = event.target;\n    const {onGetListDistrict} = this.props;\n    this.setState({\n      cityID: value,\n      city: options[selectedIndex].text,\n      district: \"\",\n    })\n    onGetListDistrict({province_id: event.target.value });\n  }\n\n  setWard = (event) => {\n    const {options, selectedIndex, value} = event.target;\n    const {onGetListWard} = this.props;\n    const {cityID} = this.state;\n    this.setState({\n      district: options[selectedIndex].text,\n      districtID: value\n    })\n    onGetListWard(cityID, event.target.value);\n  }\n\n  setAddress = (event) =>{\n    const {options, selectedIndex, value} = event.target;\n    this.setState({\n      ward: options[selectedIndex].text,\n      wardID: value\n    })\n  }\n\n  onChange = (event) => {\n    var target = event.target;\n    var name = target.name;\n    var value = target.value;\n    this.setState({\n      [name]: value,\n    })\n  }\n\n\n  updateProfile =()=>{\n    const {userInfo, onUpdate} = this.props;\n    const {firstname, lastname, phonenumber, address, ward, city, district, email} = this.state;\n    /* Xử lý ảnh */\n    const {selectedFile} = this.props;\n    var formData = new FormData();\n    formData.append(\"image\",selectedFile);\n    /* Xử lý ảnh */\n    var data = {firstname, lastname, phonenumber, address : `${address.replaceAll(',', '')}, ${ward}, ${district}, ${city}`, email, image: selectedFile ? formData : null}\n    onUpdate(userInfo._id, data);\n  }\n\n  render() {\n    const {firstname, lastname, phonenumber, address, email, cityID, districtID, wardID} = this.state;\n    const {t, listCity, listDistrict, listWard} = this.props;\n\n    return (  \n      <div>\n        <div className=\"row py-2\">\n          <div className=\"col-6\">\n            <div className=\"form-floating\">\n              <input type=\"text\" className=\"form-control\" id=\"firstname\" name=\"firstname\" value={firstname} onChange={this.onChange}/>\n              <label for=\"firstname\">{t('checkout.firstname.input')}</label>\n            </div>\n          </div>\n          <div className=\"col-6\">\n            <div className=\"form-floating\">\n              <input type=\"text\" className=\"form-control\" id=\"lastname\" name=\"lastname\" value={lastname} onChange={this.onChange}/>\n              <label for=\"lastname\">{t('checkout.lastname.input')}</label>\n            </div>\n          </div>\n        </div>\n        <div className=\"row py-2\">\n          <div className=\"col-6\">\n            <div className=\"form-floating\">\n              <input type=\"tel\" className=\"form-control\" id=\"phonenumber\" name=\"phonenumber\" value={phonenumber} onChange={this.onChange}/>\n              <label for=\"phonenumber\">{t('checkout.phone.input')}</label>\n            </div>\n          </div>\n          <div className=\"col-6\">\n            <div className=\"form-floating\">\n              <input type=\"email\" className=\"form-control\" id=\"email\" name=\"email\" value={email} onChange={this.onChange} disabled/>\n              <label for=\"email\">Email</label>\n            </div>\n          </div>\n        </div>\n        <div className=\"row py-2\">\n          <div className=\"col-12\">\n            <div className=\"form-floating\">\n              <input type=\"text\" className=\"form-control\" id=\"address\" name=\"address\" value={address} onChange={this.onChange}/>\n              <label for=\"address\">{t('checkout.address.input')}</label>\n            </div>\n          </div>\n        </div>\n        <div className=\"row py-2\">\n          <div className=\"col-4\">\n            <div className=\"form-floating\">\n              <select className=\"form-select\" type=\"text\" id=\"city\" value={cityID}\n              onChange={this.setDistrict} required>\n                {listCity && listCity.map((item, index)=>{\n                    return(\n                      <option key={index} value={item.ProvinceID} name=\"city\">{item.ProvinceName}</option>\n                    )\n                  })\n                }\n              </select>\n              <label htmlFor=\"city\">Tỉnh thành</label>\n            </div>\n          </div>\n          <div className=\"col-4\">\n            <div className=\"form-floating\">\n              <select  className=\"form-select\" type=\"text\" id=\"district\"\n              value={districtID ? districtID : null}\n              onChange={this.setWard} required>\n                {listDistrict && listDistrict.map((item, index)=>{\n                      return(\n                        <option key={index} value={item.DistrictID} name=\"district\">{item.DistrictName}</option>\n                      )\n                    })\n                  }\n              </select>\n              <label htmlFor=\"district\">Quận huyện</label>\n            </div>\n          </div>\n          <div className=\"col-4\">\n            <div className=\"form-floating\">\n              <select  className=\"form-select\" type=\"text\" id=\"ward\"\n              value={wardID ? wardID : null}\n              onChange={this.setAddress} required>\n                {listWard && listWard.map((item, index)=>{\n                      return(\n                        <option key={index} value={item.WardCode} name=\"ward\">{item.WardName}</option>\n                      )\n                    })\n                  }\n              </select>\n              <label htmlFor=\"ward\">Phường xã</label>\n            </div>\n          </div>\n        </div>\n        <button type=\"button\" className=\"btn btn-success\" data-bs-dismiss=\"modal\" onClick={() => this.updateProfile()}>{t('user.save-change.button')}</button>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) =>{\n  return {\n    listDistrict: state.address.district,\n    listWard: state.address.ward,\n  }\n}\n\nconst mapDispatchToProps =(dispatch)=> {\n  return {\n    onUpdate : (id, params) =>{\n\t\t\tdispatch(UsersActions.onUpdate({id, params}))\n    },\n    onGetListDistrict: (cityID) => {\n      dispatch(AddressActions.onGetDistrict(cityID))\n    },\n    onGetListWard: (cityID, districtID) => {\n      dispatch(AddressActions.onGetWard(cityID, districtID))\n    }\n\t}\n};\n\nconst withConnect = connect(mapStateToProps, mapDispatchToProps)\n\nexport default compose(\n  withConnect,\n  withTranslation()\n)(UserDetail);"]},"metadata":{},"sourceType":"module"}