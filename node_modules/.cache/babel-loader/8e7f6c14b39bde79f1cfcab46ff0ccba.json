{"ast":null,"code":"var _jsxFileName = \"/Users/vyduong/Documents/Home-ApumStore/src/containers/ActivePassword/index.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux'; // @Functions\n\nimport { toastError } from '../../utils/toastHelper'; // @Actions\n\nimport AuthorizationActions from '../../redux/actions/auth';\n\nclass ActivePassword extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = event => {\n      var target = event.target;\n      var name = target.name;\n      var value = target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.onResetPassword = () => {\n      const {\n        match,\n        onActivatePassword,\n        t\n      } = this.props;\n      const {\n        newPassword,\n        confirmPassword\n      } = this.state;\n\n      if (newPassword === confirmPassword && newPassword !== null) {\n        onActivatePassword({\n          token: match.params.token,\n          data: {\n            password: newPassword\n          }\n        });\n      } else {\n        toastError(`${t('active.toastify.error')}`);\n      }\n    };\n\n    this.state = {\n      newPassword: \"\",\n      confirmPassword: \"\"\n    };\n  }\n\n  render() {\n    const {\n      t\n    } = this.props;\n    const {\n      newPassword,\n      confirmPassword\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"activate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"activate shadow p-3 mb-5 bg-white rounded\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, t('active.password.h2'))), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control my-4\",\n      type: \"password\",\n      name: \"newPassword\",\n      value: newPassword,\n      onChange: this.onChange,\n      placeholder: t('user.new.input'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control my-4\",\n      type: \"password\",\n      name: \"confirmPassword\",\n      value: confirmPassword,\n      onChange: this.onChange,\n      placeholder: t('user.confirm.input'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: () => this.onResetPassword(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, t('user.save-password.button'))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {};\n};\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    onActivatePassword: payload => {\n      dispatch(AuthorizationActions.onActivatePassword(payload));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ActivePassword);","map":{"version":3,"sources":["/Users/vyduong/Documents/Home-ApumStore/src/containers/ActivePassword/index.js"],"names":["React","Component","connect","toastError","AuthorizationActions","ActivePassword","constructor","props","onChange","event","target","name","value","setState","onResetPassword","match","onActivatePassword","t","newPassword","confirmPassword","state","token","params","data","password","render","mapStateToProps","mapDispatchToProps","dispatch","payload"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {connect} from 'react-redux';\n\n// @Functions\nimport { toastError } from '../../utils/toastHelper';\n\n// @Actions\nimport AuthorizationActions from '../../redux/actions/auth'\n\nclass ActivePassword extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      newPassword: \"\",\n      confirmPassword: \"\"\n    }\n  }\n\n  onChange = (event) => {\n    var target = event.target;\n    var name = target.name;\n    var value = target.value;\n    this.setState({\n      [name]: value\n    })\n  }\n\n  onResetPassword = () =>{\n    const { match, onActivatePassword, t } = this.props;\n    const { newPassword, confirmPassword } = this.state;\n    if(newPassword === confirmPassword && newPassword!== null) {\n      onActivatePassword({\n        token : match.params.token,\n        data: { password : newPassword }\n      })\n    }\n    else{\n      toastError(`${t('active.toastify.error')}`)\n    }\n  }\n\n  render() {\n    const { t } = this.props;\n    const { newPassword, confirmPassword } = this.state;\n    return (\n      <div  id=\"activate\">\n        <div className=\"activate shadow p-3 mb-5 bg-white rounded\">\n          <div className=\"\">\n            <h3>{t('active.password.h2')}</h3>\n          </div>\n          <input className=\"form-control my-4\" type=\"password\" name=\"newPassword\" value={newPassword} onChange={this.onChange} placeholder={t('user.new.input')}></input>\n          <input className=\"form-control my-4\" type=\"password\" name=\"confirmPassword\" value={confirmPassword} onChange={this.onChange} placeholder={t('user.confirm.input')}></input>\n          <button className=\"btn btn-primary\" onClick={()=> this.onResetPassword()}>{t('user.save-password.button')}</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) =>{\n  return {\n  }\n}\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    onActivatePassword : (payload) =>{\n\t\t\tdispatch(AuthorizationActions.onActivatePassword(payload))\n\t\t},\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (ActivePassword);"]},"metadata":{},"sourceType":"module"}