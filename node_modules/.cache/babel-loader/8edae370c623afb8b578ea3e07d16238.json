{"ast":null,"code":"export const NotificationActionTypes = {\n  GET_LIST: \"GET_LIST\",\n  GET_LIST_SUCCESS: \"GET_LIST_SUCCESS\",\n  GET_LIST_ERROR: \"GET_LIST_ERROR\",\n  GET_NEWEST: \"GET_NEWEST\",\n  GET_NEWEST_SUCCESS: \"GET_NEWEST_SUCCESS\",\n  GET_NEWEST_ERROR: \"GET_NEWEST_ERROR\",\n  CREATE: \"CREATE\",\n  CREATE_SUCCESS: \"CREATE_SUCCESS\",\n  CREATE_ERROR: \"CREATE_ERROR\",\n  UPDATE: \"UPDATE\",\n  UPDATE_SUCCESS: \"UPDATE_SUCCESS\",\n  UPDATE_ERROR: \"UPDATE_ERROR\",\n  UPDATE_ALL: \"UPDATE_ALL\",\n  UPDATE_ALL_SUCCESS: \"UPDATE_ALL_SUCCESS\",\n  UPDATE_ALL_ERROR: \"UPDATE_ALL_ERROR\",\n  DELETE: \"DELETE\",\n  DELETE_SUCCESS: \"DELETE_SUCCESS\",\n  DELETE_ERROR: \"DELETE_ERROR\",\n  DELETE_ALL: \"DELETE_ALL\",\n  DELETE_ALL_SUCCESS: \"DELETE_ALL_SUCCESS\",\n  DELETE_ALL_ERROR: \"DELETE_ALL_ERROR\",\n  CLEAR_DETAIL: \"CLEAR_DETAIL\",\n  CLEAR_STATE: \"CLEAR_STATE\"\n};\nObject.keys(NotificationActionTypes).forEach(key => {\n  NotificationActionTypes[key] = `NOTIFICATION_${NotificationActionTypes[key]}`;\n});\n\nconst onClearDetail = () => ({\n  type: NotificationActionTypes.CLEAR_DETAIL\n});\n\nconst onClearState = () => ({\n  type: NotificationActionTypes.CLEAR_STATE\n});\n/**\n *\n * get list\n */\n\n\nconst onGetNewest = payload => ({\n  type: NotificationActionTypes.GET_NEWEST,\n  payload\n});\n\nconst onGetNewestSuccess = (detail, total) => ({\n  type: NotificationActionTypes.GET_NEWEST_SUCCESS,\n  payload: {\n    detail,\n    total\n  }\n});\n\nconst onGetNewestError = error => ({\n  type: NotificationActionTypes.GET_NEWEST_ERROR,\n  payload: error\n});\n\nconst onGetList = payload => ({\n  type: NotificationActionTypes.GET_LIST,\n  payload\n});\n\nconst onGetListSuccess = (list, total) => ({\n  type: NotificationActionTypes.GET_LIST_SUCCESS,\n  payload: {\n    list,\n    total\n  }\n});\n\nconst onGetListError = error => ({\n  type: NotificationActionTypes.GET_LIST_ERROR,\n  payload: error\n});\n/**\n *\n * create\n */\n\n\nconst onCreate = data => ({\n  type: NotificationActionTypes.CREATE,\n  payload: data\n});\n\nconst onCreateSuccess = detail => ({\n  type: NotificationActionTypes.CREATE_SUCCESS,\n  payload: detail\n});\n\nconst onCreateError = error => ({\n  type: NotificationActionTypes.CREATE_ERROR,\n  payload: error\n});\n/**\n *\n * update\n */\n\n\nconst onUpdate = (id, data, params) => ({\n  type: NotificationActionTypes.UPDATE,\n  payload: {\n    id,\n    data,\n    params\n  }\n});\n\nconst onUpdateSuccess = detail => ({\n  type: NotificationActionTypes.UPDATE_SUCCESS,\n  payload: detail\n});\n\nconst onUpdateError = error => ({\n  type: NotificationActionTypes.UPDATE_ERROR,\n  payload: error\n});\n\nconst onUpdateAll = (data, params) => ({\n  type: NotificationActionTypes.UPDATE_ALL,\n  payload: {\n    data,\n    params\n  }\n});\n\nconst onUpdateAllSuccess = payload => ({\n  type: NotificationActionTypes.UPDATE_ALL_SUCCESS,\n  payload\n});\n\nconst onUpdateAllError = error => ({\n  type: NotificationActionTypes.UPDATE_ALL_ERROR,\n  payload: error\n});\n/**\n *\n * delete\n */\n\n\nconst onDelete = (id, params) => ({\n  type: NotificationActionTypes.DELETE,\n  payload: {\n    id,\n    params\n  }\n});\n\nconst onDeleteSuccess = detail => ({\n  type: NotificationActionTypes.DELETE_SUCCESS,\n  payload: detail\n});\n\nconst onDeleteError = error => ({\n  type: NotificationActionTypes.DELETE_ERROR,\n  payload: error\n});\n\nconst onDeleteAll = (id, params) => ({\n  type: NotificationActionTypes.DELETE_ALL,\n  payload: {\n    id,\n    params\n  }\n});\n\nconst onDeleteAllSuccess = detail => ({\n  type: NotificationActionTypes.DELETE_ALL_SUCCESS,\n  payload: detail\n});\n\nconst onDeleteAllError = error => ({\n  type: NotificationActionTypes.DELETE_ALL_ERROR,\n  payload: error\n});\n\nconst NotificationActions = {\n  onGetNewest,\n  onGetNewestSuccess,\n  onGetNewestError,\n  onGetList,\n  onGetListSuccess,\n  onGetListError,\n  onCreate,\n  onCreateSuccess,\n  onCreateError,\n  onUpdate,\n  onUpdateSuccess,\n  onUpdateError,\n  onDelete,\n  onDeleteSuccess,\n  onDeleteError,\n  onUpdateAll,\n  onUpdateAllSuccess,\n  onUpdateAllError,\n  onDeleteAll,\n  onDeleteAllSuccess,\n  onDeleteAllError,\n  onClearDetail,\n  onClearState\n};\nexport default NotificationActions;","map":{"version":3,"sources":["/Users/vyduong/Documents/Home-ApumStore/src/redux/actions/notification.js"],"names":["NotificationActionTypes","GET_LIST","GET_LIST_SUCCESS","GET_LIST_ERROR","GET_NEWEST","GET_NEWEST_SUCCESS","GET_NEWEST_ERROR","CREATE","CREATE_SUCCESS","CREATE_ERROR","UPDATE","UPDATE_SUCCESS","UPDATE_ERROR","UPDATE_ALL","UPDATE_ALL_SUCCESS","UPDATE_ALL_ERROR","DELETE","DELETE_SUCCESS","DELETE_ERROR","DELETE_ALL","DELETE_ALL_SUCCESS","DELETE_ALL_ERROR","CLEAR_DETAIL","CLEAR_STATE","Object","keys","forEach","key","onClearDetail","type","onClearState","onGetNewest","payload","onGetNewestSuccess","detail","total","onGetNewestError","error","onGetList","onGetListSuccess","list","onGetListError","onCreate","data","onCreateSuccess","onCreateError","onUpdate","id","params","onUpdateSuccess","onUpdateError","onUpdateAll","onUpdateAllSuccess","onUpdateAllError","onDelete","onDeleteSuccess","onDeleteError","onDeleteAll","onDeleteAllSuccess","onDeleteAllError","NotificationActions"],"mappings":"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","sourcesContent":["export const NotificationActionTypes = {\n  GET_LIST: \"GET_LIST\",\n  GET_LIST_SUCCESS: \"GET_LIST_SUCCESS\",\n  GET_LIST_ERROR: \"GET_LIST_ERROR\",\n\n  GET_NEWEST: \"GET_NEWEST\",\n  GET_NEWEST_SUCCESS: \"GET_NEWEST_SUCCESS\",\n  GET_NEWEST_ERROR: \"GET_NEWEST_ERROR\",\n\n  CREATE: \"CREATE\",\n  CREATE_SUCCESS: \"CREATE_SUCCESS\",\n  CREATE_ERROR: \"CREATE_ERROR\",\n\n  UPDATE: \"UPDATE\",\n  UPDATE_SUCCESS: \"UPDATE_SUCCESS\",\n  UPDATE_ERROR: \"UPDATE_ERROR\",\n\n  UPDATE_ALL: \"UPDATE_ALL\",\n  UPDATE_ALL_SUCCESS: \"UPDATE_ALL_SUCCESS\",\n  UPDATE_ALL_ERROR: \"UPDATE_ALL_ERROR\",\n\n  DELETE: \"DELETE\",\n  DELETE_SUCCESS: \"DELETE_SUCCESS\",\n  DELETE_ERROR: \"DELETE_ERROR\",\n\n  DELETE_ALL: \"DELETE_ALL\",\n  DELETE_ALL_SUCCESS: \"DELETE_ALL_SUCCESS\",\n  DELETE_ALL_ERROR: \"DELETE_ALL_ERROR\",\n\n  CLEAR_DETAIL: \"CLEAR_DETAIL\",\n  CLEAR_STATE: \"CLEAR_STATE\",\n};\n\nObject.keys(NotificationActionTypes).forEach((key) => {\n  NotificationActionTypes[key] = `NOTIFICATION_${NotificationActionTypes[key]}`;\n});\n\nconst onClearDetail = () => ({\n  type: NotificationActionTypes.CLEAR_DETAIL,\n});\n\nconst onClearState = () => ({\n  type: NotificationActionTypes.CLEAR_STATE,\n});\n\n/**\n *\n * get list\n */\n\nconst onGetNewest = (payload) => ({\n  type: NotificationActionTypes.GET_NEWEST,\n  payload,\n});\n\nconst onGetNewestSuccess = (detail, total) => ({\n  type: NotificationActionTypes.GET_NEWEST_SUCCESS,\n  payload: {detail, total},\n});\n\nconst onGetNewestError = (error) => ({\n  type: NotificationActionTypes.GET_NEWEST_ERROR,\n  payload: error,\n});\n\nconst onGetList = (payload) => ({\n  type: NotificationActionTypes.GET_LIST,\n  payload,\n});\n\nconst onGetListSuccess = (list, total) => ({\n  type: NotificationActionTypes.GET_LIST_SUCCESS,\n  payload: {list, total},\n});\n\nconst onGetListError = (error) => ({\n  type: NotificationActionTypes.GET_LIST_ERROR,\n  payload: error,\n});\n\n/**\n *\n * create\n */\n\nconst onCreate = (data) => ({\n  type: NotificationActionTypes.CREATE,\n  payload: data,\n});\n\nconst onCreateSuccess = (detail) => ({\n  type: NotificationActionTypes.CREATE_SUCCESS,\n  payload: detail,\n});\n\nconst onCreateError = (error) => ({\n  type: NotificationActionTypes.CREATE_ERROR,\n  payload: error,\n});\n\n/**\n *\n * update\n */\nconst onUpdate = (id, data, params) => ({\n  type: NotificationActionTypes.UPDATE,\n  payload: { id, data, params },\n});\n\nconst onUpdateSuccess = (detail) => ({\n  type: NotificationActionTypes.UPDATE_SUCCESS,\n  payload: detail,\n});\n\nconst onUpdateError = (error) => ({\n  type: NotificationActionTypes.UPDATE_ERROR,\n  payload: error,\n});\n\nconst onUpdateAll = (data, params) => ({\n  type: NotificationActionTypes.UPDATE_ALL,\n  payload: { data, params },\n});\n\nconst onUpdateAllSuccess = (payload) => ({\n  type: NotificationActionTypes.UPDATE_ALL_SUCCESS,\n  payload,\n});\n\nconst onUpdateAllError = (error) => ({\n  type: NotificationActionTypes.UPDATE_ALL_ERROR,\n  payload: error,\n});\n\n\n/**\n *\n * delete\n */\nconst onDelete = (id, params) => ({\n  type: NotificationActionTypes.DELETE,\n  payload : { id, params },\n});\n\nconst onDeleteSuccess = (detail) => ({\n  type: NotificationActionTypes.DELETE_SUCCESS,\n  payload: detail,\n});\n\nconst onDeleteError = (error) => ({\n  type: NotificationActionTypes.DELETE_ERROR,\n  payload: error,\n});\n\nconst onDeleteAll = (id, params) => ({\n  type: NotificationActionTypes.DELETE_ALL,\n  payload: { id, params },\n});\n\nconst onDeleteAllSuccess = (detail) => ({\n  type: NotificationActionTypes.DELETE_ALL_SUCCESS,\n  payload: detail,\n});\n\nconst onDeleteAllError = (error) => ({\n  type: NotificationActionTypes.DELETE_ALL_ERROR,\n  payload: error,\n});\n\nconst NotificationActions = {\n  onGetNewest,\n  onGetNewestSuccess,\n  onGetNewestError,\n\n  onGetList,\n  onGetListSuccess,\n  onGetListError,\n\n  onCreate,\n  onCreateSuccess,\n  onCreateError,\n\n  onUpdate,\n  onUpdateSuccess,\n  onUpdateError,\n\n  onDelete,\n  onDeleteSuccess,\n  onDeleteError,\n\n  onUpdateAll,\n  onUpdateAllSuccess,\n  onUpdateAllError,\n\n  onDeleteAll,\n  onDeleteAllSuccess,\n  onDeleteAllError,\n\n  onClearDetail,\n  onClearState,\n};\n\nexport default NotificationActions;\n"]},"metadata":{},"sourceType":"module"}