{"ast":null,"code":"import _regeneratorRuntime from\"/Users/vyduong/Desktop/client/Home-ApumStore/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/vyduong/Desktop/client/Home-ApumStore/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import React,{useRef,useEffect}from\"react\";// @Functions\nimport tryConvert from'../../utils/changeMoney';export default function Paypal(_ref){var total_price=_ref.total_price,total=_ref.total,onCreateAnOrder=_ref.onCreateAnOrder,order_list=_ref.order_list,note=_ref.note,authInfo=_ref.authInfo,shipping_address=_ref.shipping_address,shipping_phone=_ref.shipping_phone,shipToDifferentAddress=_ref.shipToDifferentAddress;var paypal=useRef();/* eslint-disable */useEffect(function(){window.paypal.Buttons({createOrder:function createOrder(data,actions,err){return actions.order.create({intent:\"CAPTURE\",purchase_units:[{description:\"Tell Me Payment\",amount:{currency_code:\"USD\",value:total_price}}]});},onApprove:function(){var _onApprove=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(data,actions){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:// Nếu thành công thì set payment_method = paypal, isPaid = true\nif(shipToDifferentAddress===true){data={order_list:order_list,total_price:Math.round(parseInt(tryConvert(total_price,\"USD\",true))/10000)*10000,total_quantity:total,shipping_phonenumber:shipping_phone,email:authInfo.email,shipping_address:shipping_address,note:note,status:-1,payment_method:\"paypal\",paid:true};}else{data={order_list:order_list,total_price:Math.round(parseInt(tryConvert(total_price,\"USD\",true))/10000)*10000,total_quantity:total,shipping_phonenumber:authInfo.phonenumber,email:authInfo.email,shipping_address:authInfo.address,status:-1,payment_method:\"paypal\",note:note,paid:true};}onCreateAnOrder(data);_context.next=4;return actions.order.capture();case 4:case\"end\":return _context.stop();}}},_callee);}));function onApprove(_x,_x2){return _onApprove.apply(this,arguments);}return onApprove;}(),onError:function onError(err){}}).render(paypal.current);},[]);/* eslint-disable */return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{ref:paypal}));}","map":{"version":3,"sources":["/Users/vyduong/Desktop/client/Home-ApumStore/src/components/CheckoutPage/Paypal.js"],"names":["React","useRef","useEffect","tryConvert","Paypal","total_price","total","onCreateAnOrder","order_list","note","authInfo","shipping_address","shipping_phone","shipToDifferentAddress","paypal","window","Buttons","createOrder","data","actions","err","order","create","intent","purchase_units","description","amount","currency_code","value","onApprove","Math","round","parseInt","total_quantity","shipping_phonenumber","email","status","payment_method","paid","phonenumber","address","capture","onError","render","current"],"mappings":"mUAAA,MAAOA,CAAAA,KAAP,EAAgBC,MAAhB,CAAwBC,SAAxB,KAAyC,OAAzC,CACA;AACA,MAAOC,CAAAA,UAAP,KAAuB,yBAAvB,CAEA,cAAe,SAASC,CAAAA,MAAT,MAA6I,IAA5HC,CAAAA,WAA4H,MAA5HA,WAA4H,CAAhHC,KAAgH,MAAhHA,KAAgH,CAAzGC,eAAyG,MAAzGA,eAAyG,CAAxFC,UAAwF,MAAxFA,UAAwF,CAA5EC,IAA4E,MAA5EA,IAA4E,CAAtEC,QAAsE,MAAtEA,QAAsE,CAA3DC,gBAA2D,MAA3DA,gBAA2D,CAAzCC,cAAyC,MAAzCA,cAAyC,CAAzBC,sBAAyB,MAAzBA,sBAAyB,CAC1J,GAAMC,CAAAA,MAAM,CAAGb,MAAM,EAArB,CACA,oBACAC,SAAS,CAAC,UAAM,CACda,MAAM,CAACD,MAAP,CAAcE,OAAd,CAAsB,CAClBC,WAAW,CAAE,qBAACC,IAAD,CAAOC,OAAP,CAAgBC,GAAhB,CAAwB,CACnC,MAAOD,CAAAA,OAAO,CAACE,KAAR,CAAcC,MAAd,CAAqB,CAC1BC,MAAM,CAAE,SADkB,CAE1BC,cAAc,CAAE,CACd,CACEC,WAAW,CAAE,iBADf,CAEEC,MAAM,CAAE,CACNC,aAAa,CAAE,KADT,CAENC,KAAK,CAAEvB,WAFD,CAFV,CADc,CAFU,CAArB,CAAP,CAYD,CAdiB,CAelBwB,SAAS,mFAAE,iBAAOX,IAAP,CAAaC,OAAb,kHACT;AACA,GAAGN,sBAAsB,GAAK,IAA9B,CAAoC,CAClCK,IAAI,CAAG,CACLV,UAAU,CAAVA,UADK,CAELH,WAAW,CAAEyB,IAAI,CAACC,KAAL,CAAWC,QAAQ,CAAC7B,UAAU,CAACE,WAAD,CAAc,KAAd,CAAqB,IAArB,CAAX,CAAR,CAA+C,KAA1D,EAAkE,KAF1E,CAGL4B,cAAc,CAAE3B,KAHX,CAIL4B,oBAAoB,CAAEtB,cAJjB,CAKLuB,KAAK,CAAEzB,QAAQ,CAACyB,KALX,CAMLxB,gBAAgB,CAAhBA,gBANK,CAOLF,IAAI,CAAJA,IAPK,CAQL2B,MAAM,CAAE,CAAC,CARJ,CASLC,cAAc,CAAE,QATX,CAULC,IAAI,CAAE,IAVD,CAAP,CAYD,CAbD,IAcI,CACFpB,IAAI,CAAG,CACLV,UAAU,CAAVA,UADK,CAELH,WAAW,CAAEyB,IAAI,CAACC,KAAL,CAAWC,QAAQ,CAAC7B,UAAU,CAACE,WAAD,CAAc,KAAd,CAAqB,IAArB,CAAX,CAAR,CAA+C,KAA1D,EAAkE,KAF1E,CAGL4B,cAAc,CAAE3B,KAHX,CAIL4B,oBAAoB,CAAExB,QAAQ,CAAC6B,WAJ1B,CAKLJ,KAAK,CAAEzB,QAAQ,CAACyB,KALX,CAMLxB,gBAAgB,CAAED,QAAQ,CAAC8B,OANtB,CAOLJ,MAAM,CAAE,CAAC,CAPJ,CAQLC,cAAc,CAAE,QARX,CASL5B,IAAI,CAAJA,IATK,CAUL6B,IAAI,CAAE,IAVD,CAAP,CAYD,CACD/B,eAAe,CAACW,IAAD,CAAf,CA9BS,sBA+BHC,CAAAA,OAAO,CAACE,KAAR,CAAcoB,OAAd,EA/BG,uDAAF,2FAfS,CAgDlBC,OAAO,CAAE,iBAACtB,GAAD,CAAS,CACjB,CAjDiB,CAAtB,EAmDGuB,MAnDH,CAmDU7B,MAAM,CAAC8B,OAnDjB,EAoDD,CArDQ,CAqDN,EArDM,CAAT,CAsDF,oBACE,mBACE,4CACE,2BAAK,GAAG,CAAE9B,MAAV,EADF,CADF,CAKD","sourcesContent":["import React, { useRef, useEffect } from \"react\";\n// @Functions\nimport tryConvert from '../../utils/changeMoney'\n\nexport default function Paypal({total_price,total, onCreateAnOrder, order_list, note, authInfo,  shipping_address, shipping_phone, shipToDifferentAddress}) {\n  const paypal = useRef();\n  /* eslint-disable */\n  useEffect(() => {\n    window.paypal.Buttons({\n        createOrder: (data, actions, err) => {\n          return actions.order.create({\n            intent: \"CAPTURE\",\n            purchase_units: [\n              {\n                description: \"Tell Me Payment\",\n                amount: {\n                  currency_code: \"USD\",\n                  value: total_price,\n                },\n              },\n            ],\n          });\n        },\n        onApprove: async (data, actions) => {\n          // Nếu thành công thì set payment_method = paypal, isPaid = true\n          if(shipToDifferentAddress === true) {\n            data = {\n              order_list,\n              total_price: Math.round(parseInt(tryConvert(total_price, \"USD\", true))/10000)* 10000,\n              total_quantity: total,\n              shipping_phonenumber: shipping_phone,\n              email: authInfo.email,\n              shipping_address,\n              note,\n              status: -1,\n              payment_method: \"paypal\",\n              paid: true\n            }\n          }\n          else{\n            data = {\n              order_list,\n              total_price: Math.round(parseInt(tryConvert(total_price, \"USD\", true))/10000)* 10000,\n              total_quantity: total,\n              shipping_phonenumber: authInfo.phonenumber,\n              email: authInfo.email,\n              shipping_address: authInfo.address,\n              status: -1,\n              payment_method: \"paypal\",\n              note,\n              paid: true\n            }\n          }\n          onCreateAnOrder(data);\n          await actions.order.capture();\n        },\n        onError: (err) => {\n        },\n      })\n      .render(paypal.current);\n  }, []);\n/* eslint-disable */\n  return (\n    <div>\n      <div ref={paypal}></div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}