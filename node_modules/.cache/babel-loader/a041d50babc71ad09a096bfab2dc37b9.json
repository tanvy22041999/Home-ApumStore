{"ast":null,"code":"//Nơi chứa các hàm gọi API riêng biệt cho từng module\n//Module Product\nimport axiosService from '../../utils/AxiosService';\nimport { API_ENDPOINT_AUTH } from '../../constants/index';\nimport queryString from 'query-string';\nconst url = '/users/notification';\nconst url_all = '/users/notification-all'; // http://localhost:3000/users/notification  METHOD = GET\n\nexport const getAllNotifications = (params = {}) => {\n  let queryParams = '';\n\n  if (Object.keys(params).length > 0) {\n    queryParams = `?${queryString.stringify(params)}`;\n  }\n\n  return axiosService.get(`${API_ENDPOINT_AUTH}${url}${queryParams}`);\n}; // http://localhost:3000/users/notification-newest  METHOD = GET\n\nexport const getNewestNotifications = (params = {}) => {\n  let queryParams = '';\n\n  if (Object.keys(params).length > 0) {\n    queryParams = `?${queryString.stringify(params)}`;\n  }\n\n  return axiosService.get(`${API_ENDPOINT_AUTH}/users/notification-newest${queryParams}`);\n}; // http://localhost:3000/users/notification  METHOD = POST\n\nexport const addNotification = data => {\n  return axiosService.post(`${API_ENDPOINT_AUTH}${url}`, data);\n}; // http://localhost:3000/users/notification/:notificationId\n\nexport const updateNotification = (notificationId, data) => {\n  return axiosService.put(`${API_ENDPOINT_AUTH}${url}/${notificationId}`, data);\n}; // http://localhost:3000/users/notification-all\n\nexport const updateAllNotifications = data => {\n  return axiosService.put(`${API_ENDPOINT_AUTH}${url_all}`, data);\n}; // http://localhost:3000/users/notification/:notificationId\n\nexport const deleteNotification = notificationId => {\n  return axiosService.delete(`${API_ENDPOINT_AUTH}${url}/${notificationId}`);\n}; // http://localhost:3000/users/notification-all/:userId\n\nexport const deleteAllNotifications = userId => {\n  return axiosService.delete(`${API_ENDPOINT_AUTH}${url_all}/${userId}`);\n};","map":{"version":3,"sources":["/Users/vyduong/Documents/Home-ApumStore/src/redux/apis/notification.js"],"names":["axiosService","API_ENDPOINT_AUTH","queryString","url","url_all","getAllNotifications","params","queryParams","Object","keys","length","stringify","get","getNewestNotifications","addNotification","data","post","updateNotification","notificationId","put","updateAllNotifications","deleteNotification","delete","deleteAllNotifications","userId"],"mappings":"AAAA;AACA;AACA,OAAOA,YAAP,MAAyB,0BAAzB;AACA,SAAQC,iBAAR,QAAgC,uBAAhC;AACA,OAAOC,WAAP,MAAwB,cAAxB;AAGA,MAAMC,GAAG,GAAG,qBAAZ;AACA,MAAMC,OAAO,GAAG,yBAAhB,C,CACA;;AACA,OAAO,MAAMC,mBAAmB,GAAG,CAACC,MAAM,GAAG,EAAV,KAAgB;AACjD,MAAIC,WAAW,GAAG,EAAlB;;AACA,MAAGC,MAAM,CAACC,IAAP,CAAYH,MAAZ,EAAoBI,MAApB,GAA2B,CAA9B,EAAgC;AAC9BH,IAAAA,WAAW,GAAI,IAAGL,WAAW,CAACS,SAAZ,CAAsBL,MAAtB,CAA8B,EAAhD;AACD;;AACD,SAAON,YAAY,CAACY,GAAb,CAAkB,GAAEX,iBAAkB,GAAEE,GAAI,GAAEI,WAAY,EAA1D,CAAP;AACD,CANM,C,CAQP;;AACA,OAAO,MAAMM,sBAAsB,GAAG,CAACP,MAAM,GAAG,EAAV,KAAgB;AACpD,MAAIC,WAAW,GAAG,EAAlB;;AACA,MAAGC,MAAM,CAACC,IAAP,CAAYH,MAAZ,EAAoBI,MAApB,GAA2B,CAA9B,EAAgC;AAC9BH,IAAAA,WAAW,GAAI,IAAGL,WAAW,CAACS,SAAZ,CAAsBL,MAAtB,CAA8B,EAAhD;AACD;;AACD,SAAON,YAAY,CAACY,GAAb,CAAkB,GAAEX,iBAAkB,6BAA4BM,WAAY,EAA9E,CAAP;AACD,CANM,C,CAQP;;AACA,OAAO,MAAMO,eAAe,GAAIC,IAAD,IAAS;AACtC,SAAOf,YAAY,CAACgB,IAAb,CAAmB,GAAEf,iBAAkB,GAAEE,GAAI,EAA7C,EAAgDY,IAAhD,CAAP;AACD,CAFM,C,CAIP;;AACA,OAAO,MAAME,kBAAkB,GAAG,CAACC,cAAD,EAAiBH,IAAjB,KAAyB;AACzD,SAAOf,YAAY,CAACmB,GAAb,CAAkB,GAAElB,iBAAkB,GAAEE,GAAI,IAAGe,cAAe,EAA9D,EAAiEH,IAAjE,CAAP;AACD,CAFM,C,CAIP;;AACA,OAAO,MAAMK,sBAAsB,GAAIL,IAAD,IAAS;AAC7C,SAAOf,YAAY,CAACmB,GAAb,CAAkB,GAAElB,iBAAkB,GAAEG,OAAQ,EAAhD,EAAmDW,IAAnD,CAAP;AACD,CAFM,C,CAIP;;AACA,OAAO,MAAMM,kBAAkB,GAAIH,cAAD,IAAmB;AACnD,SAAOlB,YAAY,CAACsB,MAAb,CAAqB,GAAErB,iBAAkB,GAAEE,GAAI,IAAGe,cAAe,EAAjE,CAAP;AACD,CAFM,C,CAIP;;AACA,OAAO,MAAMK,sBAAsB,GAAIC,MAAD,IAAW;AAC/C,SAAOxB,YAAY,CAACsB,MAAb,CAAqB,GAAErB,iBAAkB,GAAEG,OAAQ,IAAGoB,MAAO,EAA7D,CAAP;AACD,CAFM","sourcesContent":["//Nơi chứa các hàm gọi API riêng biệt cho từng module\n//Module Product\nimport axiosService from '../../utils/AxiosService';\nimport {API_ENDPOINT_AUTH} from '../../constants/index';\nimport queryString from 'query-string';\n\n\nconst url = '/users/notification';\nconst url_all = '/users/notification-all';\n// http://localhost:3000/users/notification  METHOD = GET\nexport const getAllNotifications = (params = {}) =>{\n  let queryParams = '';\n  if(Object.keys(params).length>0){\n    queryParams = `?${queryString.stringify(params)}`;\n  }\n  return axiosService.get(`${API_ENDPOINT_AUTH}${url}${queryParams}`);\n};\n\n// http://localhost:3000/users/notification-newest  METHOD = GET\nexport const getNewestNotifications = (params = {}) =>{\n  let queryParams = '';\n  if(Object.keys(params).length>0){\n    queryParams = `?${queryString.stringify(params)}`;\n  }\n  return axiosService.get(`${API_ENDPOINT_AUTH}/users/notification-newest${queryParams}`);\n};\n\n// http://localhost:3000/users/notification  METHOD = POST\nexport const addNotification = (data) =>{\n  return axiosService.post(`${API_ENDPOINT_AUTH}${url}`, data);\n}\n\n// http://localhost:3000/users/notification/:notificationId\nexport const updateNotification = (notificationId, data) =>{\n  return axiosService.put(`${API_ENDPOINT_AUTH}${url}/${notificationId}`, data);\n}\n\n// http://localhost:3000/users/notification-all\nexport const updateAllNotifications = (data) =>{\n  return axiosService.put(`${API_ENDPOINT_AUTH}${url_all}`, data);\n}\n\n// http://localhost:3000/users/notification/:notificationId\nexport const deleteNotification = (notificationId) =>{\n  return axiosService.delete(`${API_ENDPOINT_AUTH}${url}/${notificationId}`);\n}\n\n// http://localhost:3000/users/notification-all/:userId\nexport const deleteAllNotifications = (userId) =>{\n  return axiosService.delete(`${API_ENDPOINT_AUTH}${url_all}/${userId}`);\n}\n"]},"metadata":{},"sourceType":"module"}