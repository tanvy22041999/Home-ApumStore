{"ast":null,"code":"import { takeEvery, fork, all, call, put } from \"redux-saga/effects\";\nimport { get } from \"lodash\";\nimport UIActions from \"../actions/ui\";\nimport CategoryActions, { CategoryActionTypes } from \"../actions/categories\";\nimport { getAllCategories, getCategoriesByKeyword, getDetailCategory } from \"../apis/categories\";\n\nfunction* handleGetListKeyword({\n  payload\n}) {\n  yield put(UIActions.showLoading());\n\n  try {\n    const result = yield call(getCategoriesByKeyword, payload);\n    const data = get(result, \"data\");\n    if (data.code !== 200) throw data;\n    yield put(CategoryActions.onGetListKeywordSuccess(data.categories));\n  } catch (error) {\n    yield put(CategoryActions.onGetListKeywordError(error));\n  }\n\n  yield put(UIActions.hideLoading());\n}\n\nfunction* handleGetList({\n  payload\n}) {\n  try {\n    const result = yield call(getAllCategories, payload);\n    const data = get(result, \"data\");\n    if (data.code !== 200) throw data;\n    yield put(CategoryActions.onGetListSuccess(data.categorys));\n  } catch (error) {\n    yield put(CategoryActions.onGetListError(error));\n  }\n}\n\nfunction* handleGetAccessory({\n  payload\n}) {\n  try {\n    const result = yield call(getAllCategories, payload);\n    const data = get(result, \"data\");\n    if (data.code !== 200) throw data;\n    yield put(CategoryActions.onGetAccessorySuccess(data.categorys));\n  } catch (error) {\n    yield put(CategoryActions.onGetAccessoryError(error));\n  }\n}\n\nfunction* handleGetDetail({\n  id\n}) {\n  try {\n    const result = yield call(getDetailCategory, id);\n    const data = get(result, \"data\", {});\n    yield put(CategoryActions.onGetDetailSuccess(data.category));\n  } catch (error) {\n    yield put(CategoryActions.onGetDetailError(error));\n  }\n}\n/**\n *\n */\n\n\nexport function* watchGetListKeyword() {\n  yield takeEvery(CategoryActionTypes.GET_LIST_KEYWORD, handleGetListKeyword);\n}\nexport function* watchGetList() {\n  yield takeEvery(CategoryActionTypes.GET_LIST, handleGetList);\n}\nexport function* watchGetAccessory() {\n  yield takeEvery(CategoryActionTypes.GET_ACCESSORY, handleGetAccessory);\n}\nexport function* watchGetDetail() {\n  yield takeEvery(CategoryActionTypes.GET_DETAIL, handleGetDetail);\n}\nexport default function* rootSaga() {\n  yield all([fork(watchGetListKeyword), fork(watchGetList), fork(watchGetAccessory), fork(watchGetDetail)]);\n}","map":{"version":3,"sources":["/Users/vyduong/Documents/HOME_ApumStoreSua/src/redux/sagas/categories.js"],"names":["takeEvery","fork","all","call","put","get","UIActions","CategoryActions","CategoryActionTypes","getAllCategories","getCategoriesByKeyword","getDetailCategory","handleGetListKeyword","payload","showLoading","result","data","code","onGetListKeywordSuccess","categories","error","onGetListKeywordError","hideLoading","handleGetList","onGetListSuccess","categorys","onGetListError","handleGetAccessory","onGetAccessorySuccess","onGetAccessoryError","handleGetDetail","id","onGetDetailSuccess","category","onGetDetailError","watchGetListKeyword","GET_LIST_KEYWORD","watchGetList","GET_LIST","watchGetAccessory","GET_ACCESSORY","watchGetDetail","GET_DETAIL","rootSaga"],"mappings":"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","sourcesContent":["import { takeEvery, fork, all, call, put } from \"redux-saga/effects\";\nimport { get } from \"lodash\";\nimport UIActions from \"../actions/ui\";\nimport CategoryActions, { CategoryActionTypes } from \"../actions/categories\";\nimport { getAllCategories, getCategoriesByKeyword, getDetailCategory } from \"../apis/categories\";\n\nfunction* handleGetListKeyword({ payload }) {\n  yield put(UIActions.showLoading());\n  try {\n    const result = yield call(getCategoriesByKeyword, payload);\n    const data = get(result, \"data\");\n    if (data.code !== 200) throw data;\n    yield put(CategoryActions.onGetListKeywordSuccess(data.categories));\n  } catch (error) {\n    yield put(CategoryActions.onGetListKeywordError(error));\n  }\n  yield put(UIActions.hideLoading());\n}\n\nfunction* handleGetList({ payload }) {\n  try {\n    const result = yield call(getAllCategories, payload);\n    const data = get(result, \"data\");\n    if (data.code !== 200) throw data;\n    yield put(CategoryActions.onGetListSuccess(data.categorys));\n  } catch (error) {\n    yield put(CategoryActions.onGetListError(error));\n  }\n}\n\nfunction* handleGetAccessory({ payload }) {\n  try {\n    const result = yield call(getAllCategories, payload);\n    const data = get(result, \"data\");\n    if (data.code !== 200) throw data;\n    yield put(CategoryActions.onGetAccessorySuccess(data.categorys));\n  } catch (error) {\n    yield put(CategoryActions.onGetAccessoryError(error));\n  }\n}\n\nfunction* handleGetDetail({ id }) {\n  try {\n    const result = yield call(getDetailCategory, id);\n    const data = get(result, \"data\", {});\n    yield put(CategoryActions.onGetDetailSuccess(data.category));\n  } catch (error) {\n    yield put(CategoryActions.onGetDetailError(error));\n  }\n}\n\n/**\n *\n */\n\nexport function* watchGetListKeyword() {\n  yield takeEvery(CategoryActionTypes.GET_LIST_KEYWORD, handleGetListKeyword);\n}\nexport function* watchGetList() {\n  yield takeEvery(CategoryActionTypes.GET_LIST, handleGetList);\n}\nexport function* watchGetAccessory() {\n  yield takeEvery(CategoryActionTypes.GET_ACCESSORY, handleGetAccessory);\n}\nexport function* watchGetDetail() {\n  yield takeEvery(CategoryActionTypes.GET_DETAIL, handleGetDetail);\n}\n\nexport default function* rootSaga() {\n  yield all([\n    fork(watchGetListKeyword),\n    fork(watchGetList),\n    fork(watchGetAccessory),\n    fork(watchGetDetail),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}