{"ast":null,"code":"import { ProductsActionTypes } from \"../actions/products\";\nimport { toastSuccess } from '../../utils/toastHelper'; // lấy những sản phẩm đã được lưu trong localStorage về\n\nvar data = JSON.parse(localStorage.getItem('CART'));\nvar initialState = data ? data : [];\n\nconst cart = (state = initialState, action) => {\n  var {\n    product,\n    color,\n    quantity,\n    order_list\n  } = action;\n  var index = -1;\n\n  switch (action.type) {\n    case ProductsActionTypes.ADD_PRODUCT_TO_CART:\n      index = findProductInCart(state, product, color);\n\n      if (index !== -1) {\n        state[index].quantity += quantity; //cộng với 1\n      } else {\n        state.push({\n          product,\n          color,\n          quantity\n        });\n      }\n\n      localStorage.setItem('CART', JSON.stringify(state));\n      toastSuccess('Đã thêm vào giỏ hàng');\n      return [...state];\n\n    case ProductsActionTypes.DELETE_PRODUCT_CART:\n      index = findProductInCart(state, product, color);\n\n      if (index !== -1) {\n        state.splice(index, 1); // cắt đi từ vị trí index, cắt 1 phần tử\n      }\n\n      localStorage.setItem('CART', JSON.stringify(state));\n      toastSuccess('Đã xóa khỏi giỏ hàng');\n      return [...state];\n\n    case ProductsActionTypes.UPDATE_PRODUCT_CART:\n      index = findProductInCart(state, product, color);\n\n      if (index !== -1) {\n        state[index].product = product;\n        state[index].quantity = quantity;\n      }\n\n      localStorage.setItem('CART', JSON.stringify(state));\n      return [...state];\n\n    case ProductsActionTypes.PURCHASE_AGAIN:\n      // order_list : cart=[] mới truyền vào\n\n      /* eslint-disable */\n      order_list.map((item, index) => {\n        order_list[index].color = item.color._id;\n        order_list[index].product = {\n          _id: item.product,\n          bigimage: {\n            public_url: item.image\n          },\n          name: item.name,\n          colors: [{\n            _id: item.color,\n            name_en: item.name_color,\n            price: item.price\n          }]\n        };\n\n        var _index = findProductInCart(state, order_list[index].product, order_list[index].color);\n\n        if (_index === -1) {\n          order_list[index].quantity = item.quantity;\n        } else {\n          order_list[index].quantity = item.quantity + state[_index].quantity;\n        }\n      });\n      state = order_list;\n      localStorage.setItem('CART', JSON.stringify(state));\n      return [...state];\n\n    /* eslint-disable */\n\n    case ProductsActionTypes.CLEAR_CART:\n      var {\n        cart,\n        checkout\n      } = action.payload;\n      cart = cart.filter(ar => !checkout.find(rm => rm.product._id === ar.product._id && ar.color === rm.color));\n      localStorage.setItem('CART', JSON.stringify(cart));\n      return cart;\n\n    default:\n      return [...state];\n  }\n};\n\nconst findProductInCart = (cart, product, productColor) => {\n  //Trường hợp không tìm thấy\n  var index = -1;\n\n  if (cart.length > 0) {\n    for (var i = 0; i < cart.length; i++) {\n      // xem coi các product trong mảng cart có tồn tại product mới chọn ko?\n      if (cart[i].color === productColor && cart[i].product._id === product._id) {\n        index = i; //trả về vị trí\n\n        break;\n      }\n    }\n  }\n\n  return index;\n};\n\nexport default cart;","map":{"version":3,"sources":["/Users/vyduong/Documents/HOME_ApumStoreSua/src/redux/reducers/cart.js"],"names":["ProductsActionTypes","toastSuccess","data","JSON","parse","localStorage","getItem","initialState","cart","state","action","product","color","quantity","order_list","index","type","ADD_PRODUCT_TO_CART","findProductInCart","push","setItem","stringify","DELETE_PRODUCT_CART","splice","UPDATE_PRODUCT_CART","PURCHASE_AGAIN","map","item","_id","bigimage","public_url","image","name","colors","name_en","name_color","price","_index","CLEAR_CART","checkout","payload","filter","ar","find","rm","productColor","length","i"],"mappings":"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","sourcesContent":["import { ProductsActionTypes } from \"../actions/products\";\nimport { toastSuccess } from '../../utils/toastHelper';\n\n// lấy những sản phẩm đã được lưu trong localStorage về\nvar data = JSON.parse(localStorage.getItem('CART'));\n\nvar initialState = data ? data : [];\n\nconst cart = (state = initialState, action) =>{\n  var {product, color, quantity, order_list} = action;\n  var index = -1;\n  switch (action.type){\n    case ProductsActionTypes.ADD_PRODUCT_TO_CART:\n      index = findProductInCart(state, product, color);\n      if(index !== -1){\n        state[index].quantity += quantity;  //cộng với 1\n      }else{\n        state.push({\n          product,\n          color,\n          quantity\n        });\n      }\n      localStorage.setItem('CART', JSON.stringify(state));\n      toastSuccess('Đã thêm vào giỏ hàng');\n      return [...state];\n    case ProductsActionTypes.DELETE_PRODUCT_CART:\n      index = findProductInCart(state, product, color);\n      if(index !== -1){\n        state.splice(index, 1);  // cắt đi từ vị trí index, cắt 1 phần tử\n      }\n      localStorage.setItem('CART', JSON.stringify(state));\n      toastSuccess('Đã xóa khỏi giỏ hàng');\n      return [...state];\n    case ProductsActionTypes.UPDATE_PRODUCT_CART:\n      index = findProductInCart(state, product, color);\n      if(index !== -1){\n        state[index].product = product;\n        state[index].quantity = quantity;\n      }\n      localStorage.setItem('CART', JSON.stringify(state));\n      return [...state];\n    case ProductsActionTypes.PURCHASE_AGAIN:\n      // order_list : cart=[] mới truyền vào\n      /* eslint-disable */\n      order_list.map((item, index) => {\n        order_list[index].color = item.color._id;\n        order_list[index].product = {\n          _id: item.product,\n          bigimage: {\n            public_url: item.image,\n          },\n          name : item.name,\n          colors: [\n            {\n              _id: item.color,\n              name_en: item.name_color,\n              price: item.price\n            }\n          ]\n        };\n        var _index = findProductInCart(state, order_list[index].product, order_list[index].color)\n        if(_index === -1){\n          order_list[index].quantity = item.quantity\n        }\n        else{\n          order_list[index].quantity = item.quantity+state[_index].quantity\n        }\n      })\n      state = order_list\n      localStorage.setItem('CART', JSON.stringify(state));\n      return [...state]\n      /* eslint-disable */\n    case ProductsActionTypes.CLEAR_CART:\n      var {cart, checkout} = action.payload\n      cart = cart.filter(ar => !checkout.find(rm => (rm.product._id === ar.product._id && ar.color === rm.color) ))\n      localStorage.setItem('CART', JSON.stringify(cart));\n      return cart\n    default : return [...state]\n  }\n}\n\nconst findProductInCart = (cart, product, productColor) => {\n  //Trường hợp không tìm thấy\n  var index = -1;\n  if(cart.length>0){\n    for(var i=0; i<cart.length; i++){\n      // xem coi các product trong mảng cart có tồn tại product mới chọn ko?\n      if(cart[i].color === productColor && cart[i].product._id === product._id){\n        index = i;  //trả về vị trí\n        break;\n      }\n    }\n  }\n  return index;\n}\n\nexport default cart;"]},"metadata":{},"sourceType":"module"}