{"ast":null,"code":"import { takeEvery, fork, all, call, put } from \"redux-saga/effects\";\nimport { get } from \"lodash\";\nimport BrandActions, { BrandActionTypes } from \"../actions/brands\";\nimport { getAllBrands, getAllAccessory } from \"../apis/brands\";\n\nfunction* handleGetList({\n  payload\n}) {\n  try {\n    const result = yield call(getAllBrands, payload);\n    const data = get(result, \"data\");\n    if (data.code !== 200) throw data;\n    yield put(BrandActions.onGetListSuccess(data.brands));\n  } catch (error) {\n    yield put(BrandActions.onGetListError(error));\n  }\n}\n\nfunction* handleGetAccessory({\n  payload\n}) {\n  try {\n    const result = yield call(getAllAccessory, payload);\n    const data = get(result, \"data\");\n    if (data.code !== 200) throw data;\n    yield put(BrandActions.onGetAccessorySuccess(data.brands));\n  } catch (error) {\n    yield put(BrandActions.onGetAccessoryError(error));\n  }\n}\n/**\n *\n */\n\n\nexport function* watchGetList() {\n  yield takeEvery(BrandActionTypes.GET_LIST, handleGetList);\n}\nexport function* watchGetAccessory() {\n  yield takeEvery(BrandActionTypes.GET_ACCESSORY, handleGetAccessory);\n}\nexport default function* rootSaga() {\n  yield all([fork(watchGetList), fork(watchGetAccessory)]);\n}","map":{"version":3,"sources":["/Users/vyduong/Desktop/DOChoi_FE/WebBanDienThoai-master 2/FE_WebBanDienThoai/src/redux/sagas/brands.js"],"names":["takeEvery","fork","all","call","put","get","BrandActions","BrandActionTypes","getAllBrands","getAllAccessory","handleGetList","payload","result","data","code","onGetListSuccess","brands","error","onGetListError","handleGetAccessory","onGetAccessorySuccess","onGetAccessoryError","watchGetList","GET_LIST","watchGetAccessory","GET_ACCESSORY","rootSaga"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,EAA+BC,IAA/B,EAAqCC,GAArC,QAAgD,oBAAhD;AACA,SAASC,GAAT,QAAoB,QAApB;AACA,OAAOC,YAAP,IAAuBC,gBAAvB,QAA+C,mBAA/C;AACA,SAASC,YAAT,EAAuBC,eAAvB,QAA8C,gBAA9C;;AAEA,UAAUC,aAAV,CAAwB;AAAEC,EAAAA;AAAF,CAAxB,EAAqC;AACnC,MAAI;AACF,UAAMC,MAAM,GAAG,MAAMT,IAAI,CAACK,YAAD,EAAeG,OAAf,CAAzB;AACA,UAAME,IAAI,GAAGR,GAAG,CAACO,MAAD,EAAS,MAAT,CAAhB;AACA,QAAIC,IAAI,CAACC,IAAL,KAAc,GAAlB,EAAuB,MAAMD,IAAN;AACvB,UAAMT,GAAG,CAACE,YAAY,CAACS,gBAAb,CAA8BF,IAAI,CAACG,MAAnC,CAAD,CAAT;AACD,GALD,CAKE,OAAOC,KAAP,EAAc;AACd,UAAMb,GAAG,CAACE,YAAY,CAACY,cAAb,CAA4BD,KAA5B,CAAD,CAAT;AACD;AACF;;AAED,UAAUE,kBAAV,CAA6B;AAAER,EAAAA;AAAF,CAA7B,EAA0C;AACxC,MAAI;AACF,UAAMC,MAAM,GAAG,MAAMT,IAAI,CAACM,eAAD,EAAkBE,OAAlB,CAAzB;AACA,UAAME,IAAI,GAAGR,GAAG,CAACO,MAAD,EAAS,MAAT,CAAhB;AACA,QAAIC,IAAI,CAACC,IAAL,KAAc,GAAlB,EAAuB,MAAMD,IAAN;AACvB,UAAMT,GAAG,CAACE,YAAY,CAACc,qBAAb,CAAmCP,IAAI,CAACG,MAAxC,CAAD,CAAT;AACD,GALD,CAKE,OAAOC,KAAP,EAAc;AACd,UAAMb,GAAG,CAACE,YAAY,CAACe,mBAAb,CAAiCJ,KAAjC,CAAD,CAAT;AACD;AACF;AAED;AACA;AACA;;;AAEA,OAAO,UAAUK,YAAV,GAAyB;AAC9B,QAAMtB,SAAS,CAACO,gBAAgB,CAACgB,QAAlB,EAA4Bb,aAA5B,CAAf;AACD;AACD,OAAO,UAAUc,iBAAV,GAA8B;AACnC,QAAMxB,SAAS,CAACO,gBAAgB,CAACkB,aAAlB,EAAiCN,kBAAjC,CAAf;AACD;AAED,eAAe,UAAUO,QAAV,GAAqB;AAClC,QAAMxB,GAAG,CAAC,CACRD,IAAI,CAACqB,YAAD,CADI,EAERrB,IAAI,CAACuB,iBAAD,CAFI,CAAD,CAAT;AAID","sourcesContent":["import { takeEvery, fork, all, call, put } from \"redux-saga/effects\";\nimport { get } from \"lodash\";\nimport BrandActions, { BrandActionTypes } from \"../actions/brands\";\nimport { getAllBrands, getAllAccessory } from \"../apis/brands\";\n\nfunction* handleGetList({ payload }) {\n  try {\n    const result = yield call(getAllBrands, payload);\n    const data = get(result, \"data\");\n    if (data.code !== 200) throw data;\n    yield put(BrandActions.onGetListSuccess(data.brands));\n  } catch (error) {\n    yield put(BrandActions.onGetListError(error));\n  }\n}\n\nfunction* handleGetAccessory({ payload }) {\n  try {\n    const result = yield call(getAllAccessory, payload);\n    const data = get(result, \"data\");\n    if (data.code !== 200) throw data;\n    yield put(BrandActions.onGetAccessorySuccess(data.brands));\n  } catch (error) {\n    yield put(BrandActions.onGetAccessoryError(error));\n  }\n}\n\n/**\n *\n */\n\nexport function* watchGetList() {\n  yield takeEvery(BrandActionTypes.GET_LIST, handleGetList);\n}\nexport function* watchGetAccessory() {\n  yield takeEvery(BrandActionTypes.GET_ACCESSORY, handleGetAccessory);\n}\n\nexport default function* rootSaga() {\n  yield all([\n    fork(watchGetList),\n    fork(watchGetAccessory),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}