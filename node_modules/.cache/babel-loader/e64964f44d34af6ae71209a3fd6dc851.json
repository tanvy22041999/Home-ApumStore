{"ast":null,"code":"export const OrdersActionsTypes = {\n  CREATE: \"CREATE\",\n  CREATE_SUCCESS: \"CREATE_SUCCESS\",\n  CREATE_ERROR: \"CREATE_ERROR\",\n  UPDATE: \"UPDATE\",\n  UPDATE_SUCCESS: \"UPDATE_SUCCESS\",\n  UPDATE_ERROR: \"UPDATE_ERROR\",\n  SEND_CONFIRM_EMAIL: \"SEND_CONFIRM_EMAIL\",\n  SEND_CONFIRM_EMAIL_SUCCESS: \"SEND_CONFIRM_EMAIL_SUCCESS\",\n  SEND_CONFIRM_EMAIL_ERROR: \"SEND_CONFIRM_EMAIL_ERROR\",\n  CONFIRM_ORDER: \"CONFIRM_ORDER\",\n  CONFIRM_ORDER_SUCCESS: \"CONFIRM_ORDER_SUCCESS\",\n  CONFIRM_ORDER_ERROR: \"CONFIRM_ORDER_ERROR\",\n  GET_LIST: \"GET_LIST\",\n  GET_LIST_SUCCESS: \"GET_LIST_SUCCESS\",\n  GET_LIST_ERROR: \"GET_LIST_ERROR\",\n  GET_DETAIL: \"GET_DETAIL\",\n  GET_DETAIL_SUCCESS: \"GET_DETAIL_SUCCESS\",\n  GET_DETAIL_ERROR: \"GET_DETAIL_ERROR\",\n  CLEAR_DETAIL: \"CLEAR_DETAIL\"\n};\nObject.keys(OrdersActionsTypes).forEach(key => {\n  OrdersActionsTypes[key] = `ORDER_${OrdersActionsTypes[key]}`;\n});\n\nconst onClearDetail = () => ({\n  type: OrdersActionsTypes.CLEAR_DETAIL\n});\n\nconst onGetDetail = id => ({\n  type: OrdersActionsTypes.GET_DETAIL,\n  id\n});\n\nconst onGetDetailSuccess = detail => ({\n  type: OrdersActionsTypes.GET_DETAIL_SUCCESS,\n  payload: detail\n});\n\nconst onGetDetailError = error => ({\n  type: OrdersActionsTypes.GET_DETAIL_ERROR,\n  payload: error\n});\n\nconst onCreate = payload => ({\n  type: OrdersActionsTypes.CREATE,\n  payload\n});\n\nconst onCreateSuccess = data => ({\n  type: OrdersActionsTypes.CREATE_SUCCESS,\n  payload: data\n});\n\nconst onCreateError = error => ({\n  type: OrdersActionsTypes.CREATE_ERROR,\n  payload: error\n});\n\nconst onSendConfirmEmail = payload => ({\n  type: OrdersActionsTypes.SEND_CONFIRM_EMAIL,\n  payload\n});\n\nconst onSendConfirmEmailSuccess = data => ({\n  type: OrdersActionsTypes.SEND_CONFIRM_EMAIL_SUCCESS,\n  payload: data\n});\n\nconst onSendConfirmEmailError = error => ({\n  type: OrdersActionsTypes.SEND_CONFIRM_EMAIL_ERROR,\n  payload: error\n});\n\nconst onConfirmOrder = token => ({\n  type: OrdersActionsTypes.CONFIRM_ORDER,\n  payload: token\n});\n\nconst onConfirmOrderSuccess = data => ({\n  type: OrdersActionsTypes.CONFIRM_ORDER_SUCCESS,\n  payload: data\n});\n\nconst onConfirmOrderError = error => ({\n  type: OrdersActionsTypes.CONFIRM_ORDER_ERROR,\n  payload: error\n});\n\nconst onGetList = payload => ({\n  type: OrdersActionsTypes.GET_LIST,\n  payload\n});\n\nconst onGetListSuccess = (list, total) => ({\n  type: OrdersActionsTypes.GET_LIST_SUCCESS,\n  payload: {\n    list,\n    total\n  }\n});\n\nconst onGetListError = error => ({\n  type: OrdersActionsTypes.GET_LIST_ERROR,\n  payload: error\n});\n\nconst onUpdate = (id, data, params) => ({\n  type: OrdersActionsTypes.UPDATE,\n  payload: {\n    id,\n    data,\n    params\n  }\n});\n\nconst onUpdateSuccess = detail => ({\n  type: OrdersActionsTypes.UPDATE_SUCCESS,\n  payload: detail\n});\n\nconst onUpdateError = error => ({\n  type: OrdersActionsTypes.UPDATE_ERROR,\n  payload: error\n});\n\nconst OrdersActions = {\n  onClearDetail,\n  onCreate,\n  onCreateError,\n  onCreateSuccess,\n  onSendConfirmEmail,\n  onSendConfirmEmailSuccess,\n  onSendConfirmEmailError,\n  onConfirmOrder,\n  onConfirmOrderSuccess,\n  onConfirmOrderError,\n  onGetList,\n  onGetListSuccess,\n  onGetListError,\n  onGetDetail,\n  onGetDetailSuccess,\n  onGetDetailError,\n  onUpdate,\n  onUpdateSuccess,\n  onUpdateError\n};\nexport default OrdersActions;","map":{"version":3,"sources":["/Users/vyduong/Documents/HOME_ApumStoreSua/src/redux/actions/order.js"],"names":["OrdersActionsTypes","CREATE","CREATE_SUCCESS","CREATE_ERROR","UPDATE","UPDATE_SUCCESS","UPDATE_ERROR","SEND_CONFIRM_EMAIL","SEND_CONFIRM_EMAIL_SUCCESS","SEND_CONFIRM_EMAIL_ERROR","CONFIRM_ORDER","CONFIRM_ORDER_SUCCESS","CONFIRM_ORDER_ERROR","GET_LIST","GET_LIST_SUCCESS","GET_LIST_ERROR","GET_DETAIL","GET_DETAIL_SUCCESS","GET_DETAIL_ERROR","CLEAR_DETAIL","Object","keys","forEach","key","onClearDetail","type","onGetDetail","id","onGetDetailSuccess","detail","payload","onGetDetailError","error","onCreate","onCreateSuccess","data","onCreateError","onSendConfirmEmail","onSendConfirmEmailSuccess","onSendConfirmEmailError","onConfirmOrder","token","onConfirmOrderSuccess","onConfirmOrderError","onGetList","onGetListSuccess","list","total","onGetListError","onUpdate","params","onUpdateSuccess","onUpdateError","OrdersActions"],"mappings":"AAAA,OAAO,MAAMA,kBAAkB,GAAG;AAChCC,EAAAA,MAAM,EAAE,QADwB;AAEhCC,EAAAA,cAAc,EAAE,gBAFgB;AAGhCC,EAAAA,YAAY,EAAE,cAHkB;AAKhCC,EAAAA,MAAM,EAAE,QALwB;AAMhCC,EAAAA,cAAc,EAAE,gBANgB;AAOhCC,EAAAA,YAAY,EAAE,cAPkB;AAShCC,EAAAA,kBAAkB,EAAE,oBATY;AAUhCC,EAAAA,0BAA0B,EAAE,4BAVI;AAWhCC,EAAAA,wBAAwB,EAAE,0BAXM;AAahCC,EAAAA,aAAa,EAAE,eAbiB;AAchCC,EAAAA,qBAAqB,EAAE,uBAdS;AAehCC,EAAAA,mBAAmB,EAAE,qBAfW;AAiBhCC,EAAAA,QAAQ,EAAE,UAjBsB;AAkBhCC,EAAAA,gBAAgB,EAAE,kBAlBc;AAmBhCC,EAAAA,cAAc,EAAE,gBAnBgB;AAqBhCC,EAAAA,UAAU,EAAE,YArBoB;AAsBhCC,EAAAA,kBAAkB,EAAE,oBAtBY;AAuBhCC,EAAAA,gBAAgB,EAAE,kBAvBc;AAyBhCC,EAAAA,YAAY,EAAE;AAzBkB,CAA3B;AA4BPC,MAAM,CAACC,IAAP,CAAYrB,kBAAZ,EAAgCsB,OAAhC,CAAyCC,GAAD,IAAS;AAC/CvB,EAAAA,kBAAkB,CAChBuB,GADgB,CAAlB,GAEK,SAAQvB,kBAAkB,CAACuB,GAAD,CAAM,EAFrC;AAGD,CAJD;;AAMA,MAAMC,aAAa,GAAG,OAAO;AAC3BC,EAAAA,IAAI,EAAEzB,kBAAkB,CAACmB;AADE,CAAP,CAAtB;;AAIA,MAAMO,WAAW,GAAIC,EAAD,KAAS;AAC3BF,EAAAA,IAAI,EAAEzB,kBAAkB,CAACgB,UADE;AAE3BW,EAAAA;AAF2B,CAAT,CAApB;;AAKA,MAAMC,kBAAkB,GAAIC,MAAD,KAAa;AACtCJ,EAAAA,IAAI,EAAEzB,kBAAkB,CAACiB,kBADa;AAEtCa,EAAAA,OAAO,EAAED;AAF6B,CAAb,CAA3B;;AAKA,MAAME,gBAAgB,GAAIC,KAAD,KAAY;AACnCP,EAAAA,IAAI,EAAEzB,kBAAkB,CAACkB,gBADU;AAEnCY,EAAAA,OAAO,EAAEE;AAF0B,CAAZ,CAAzB;;AAKA,MAAMC,QAAQ,GAAIH,OAAD,KAAc;AAC7BL,EAAAA,IAAI,EAAEzB,kBAAkB,CAACC,MADI;AAE7B6B,EAAAA;AAF6B,CAAd,CAAjB;;AAIA,MAAMI,eAAe,GAAIC,IAAD,KAAW;AACjCV,EAAAA,IAAI,EAAEzB,kBAAkB,CAACE,cADQ;AAEjC4B,EAAAA,OAAO,EAAEK;AAFwB,CAAX,CAAxB;;AAIA,MAAMC,aAAa,GAAIJ,KAAD,KAAY;AAChCP,EAAAA,IAAI,EAAEzB,kBAAkB,CAACG,YADO;AAEhC2B,EAAAA,OAAO,EAAEE;AAFuB,CAAZ,CAAtB;;AAIA,MAAMK,kBAAkB,GAAIP,OAAD,KAAc;AACvCL,EAAAA,IAAI,EAAEzB,kBAAkB,CAACO,kBADc;AAEvCuB,EAAAA;AAFuC,CAAd,CAA3B;;AAIA,MAAMQ,yBAAyB,GAAIH,IAAD,KAAW;AAC3CV,EAAAA,IAAI,EAAEzB,kBAAkB,CAACQ,0BADkB;AAE3CsB,EAAAA,OAAO,EAAEK;AAFkC,CAAX,CAAlC;;AAIA,MAAMI,uBAAuB,GAAIP,KAAD,KAAY;AAC1CP,EAAAA,IAAI,EAAEzB,kBAAkB,CAACS,wBADiB;AAE1CqB,EAAAA,OAAO,EAAEE;AAFiC,CAAZ,CAAhC;;AAKA,MAAMQ,cAAc,GAAIC,KAAD,KAAY;AACjChB,EAAAA,IAAI,EAAEzB,kBAAkB,CAACU,aADQ;AAEjCoB,EAAAA,OAAO,EAAEW;AAFwB,CAAZ,CAAvB;;AAIA,MAAMC,qBAAqB,GAAIP,IAAD,KAAW;AACvCV,EAAAA,IAAI,EAAEzB,kBAAkB,CAACW,qBADc;AAEvCmB,EAAAA,OAAO,EAAEK;AAF8B,CAAX,CAA9B;;AAIA,MAAMQ,mBAAmB,GAAIX,KAAD,KAAY;AACtCP,EAAAA,IAAI,EAAEzB,kBAAkB,CAACY,mBADa;AAEtCkB,EAAAA,OAAO,EAAEE;AAF6B,CAAZ,CAA5B;;AAKA,MAAMY,SAAS,GAAId,OAAD,KAAc;AAC9BL,EAAAA,IAAI,EAAEzB,kBAAkB,CAACa,QADK;AAE9BiB,EAAAA;AAF8B,CAAd,CAAlB;;AAIA,MAAMe,gBAAgB,GAAG,CAACC,IAAD,EAAOC,KAAP,MAAkB;AACzCtB,EAAAA,IAAI,EAAEzB,kBAAkB,CAACc,gBADgB;AAEzCgB,EAAAA,OAAO,EAAE;AAACgB,IAAAA,IAAD;AAAOC,IAAAA;AAAP;AAFgC,CAAlB,CAAzB;;AAIA,MAAMC,cAAc,GAAIhB,KAAD,KAAY;AACjCP,EAAAA,IAAI,EAAEzB,kBAAkB,CAACe,cADQ;AAEjCe,EAAAA,OAAO,EAAEE;AAFwB,CAAZ,CAAvB;;AAKA,MAAMiB,QAAQ,GAAG,CAACtB,EAAD,EAAKQ,IAAL,EAAWe,MAAX,MAAuB;AACtCzB,EAAAA,IAAI,EAAEzB,kBAAkB,CAACI,MADa;AAEtC0B,EAAAA,OAAO,EAAE;AAAEH,IAAAA,EAAF;AAAMQ,IAAAA,IAAN;AAAYe,IAAAA;AAAZ;AAF6B,CAAvB,CAAjB;;AAKA,MAAMC,eAAe,GAAItB,MAAD,KAAa;AACnCJ,EAAAA,IAAI,EAAEzB,kBAAkB,CAACK,cADU;AAEnCyB,EAAAA,OAAO,EAAED;AAF0B,CAAb,CAAxB;;AAKA,MAAMuB,aAAa,GAAIpB,KAAD,KAAY;AAChCP,EAAAA,IAAI,EAAEzB,kBAAkB,CAACM,YADO;AAEhCwB,EAAAA,OAAO,EAAEE;AAFuB,CAAZ,CAAtB;;AAKA,MAAMqB,aAAa,GAAG;AACpB7B,EAAAA,aADoB;AAGpBS,EAAAA,QAHoB;AAIpBG,EAAAA,aAJoB;AAKpBF,EAAAA,eALoB;AAOpBG,EAAAA,kBAPoB;AAQpBC,EAAAA,yBARoB;AASpBC,EAAAA,uBAToB;AAWpBC,EAAAA,cAXoB;AAYpBE,EAAAA,qBAZoB;AAapBC,EAAAA,mBAboB;AAepBC,EAAAA,SAfoB;AAgBpBC,EAAAA,gBAhBoB;AAiBpBG,EAAAA,cAjBoB;AAmBpBtB,EAAAA,WAnBoB;AAoBpBE,EAAAA,kBApBoB;AAqBpBG,EAAAA,gBArBoB;AAuBpBkB,EAAAA,QAvBoB;AAwBpBE,EAAAA,eAxBoB;AAyBpBC,EAAAA;AAzBoB,CAAtB;AA4BA,eAAeC,aAAf","sourcesContent":["export const OrdersActionsTypes = {\n  CREATE: \"CREATE\",\n  CREATE_SUCCESS: \"CREATE_SUCCESS\",\n  CREATE_ERROR: \"CREATE_ERROR\",\n\n  UPDATE: \"UPDATE\",\n  UPDATE_SUCCESS: \"UPDATE_SUCCESS\",\n  UPDATE_ERROR: \"UPDATE_ERROR\",\n\n  SEND_CONFIRM_EMAIL: \"SEND_CONFIRM_EMAIL\",\n  SEND_CONFIRM_EMAIL_SUCCESS: \"SEND_CONFIRM_EMAIL_SUCCESS\",\n  SEND_CONFIRM_EMAIL_ERROR: \"SEND_CONFIRM_EMAIL_ERROR\",\n\n  CONFIRM_ORDER: \"CONFIRM_ORDER\",\n  CONFIRM_ORDER_SUCCESS: \"CONFIRM_ORDER_SUCCESS\",\n  CONFIRM_ORDER_ERROR: \"CONFIRM_ORDER_ERROR\",\n\n  GET_LIST: \"GET_LIST\",\n  GET_LIST_SUCCESS: \"GET_LIST_SUCCESS\",\n  GET_LIST_ERROR: \"GET_LIST_ERROR\",\n\n  GET_DETAIL: \"GET_DETAIL\",\n  GET_DETAIL_SUCCESS: \"GET_DETAIL_SUCCESS\",\n  GET_DETAIL_ERROR: \"GET_DETAIL_ERROR\",\n\n  CLEAR_DETAIL: \"CLEAR_DETAIL\",\n};\n\nObject.keys(OrdersActionsTypes).forEach((key) => {\n  OrdersActionsTypes[\n    key\n  ] = `ORDER_${OrdersActionsTypes[key]}`;\n});\n\nconst onClearDetail = () => ({\n  type: OrdersActionsTypes.CLEAR_DETAIL,\n});\n\nconst onGetDetail = (id) => ({\n  type: OrdersActionsTypes.GET_DETAIL,\n  id,\n});\n\nconst onGetDetailSuccess = (detail) => ({\n  type: OrdersActionsTypes.GET_DETAIL_SUCCESS,\n  payload: detail,\n});\n\nconst onGetDetailError = (error) => ({\n  type: OrdersActionsTypes.GET_DETAIL_ERROR,\n  payload: error,\n});\n\nconst onCreate = (payload) => ({\n  type: OrdersActionsTypes.CREATE, \n  payload\n});\nconst onCreateSuccess = (data) => ({\n  type: OrdersActionsTypes.CREATE_SUCCESS,\n  payload: data\n});\nconst onCreateError = (error) => ({\n  type: OrdersActionsTypes.CREATE_ERROR,\n  payload: error\n});\nconst onSendConfirmEmail = (payload) => ({\n  type: OrdersActionsTypes.SEND_CONFIRM_EMAIL, \n  payload\n});\nconst onSendConfirmEmailSuccess = (data) => ({\n  type: OrdersActionsTypes.SEND_CONFIRM_EMAIL_SUCCESS,\n  payload: data\n});\nconst onSendConfirmEmailError = (error) => ({\n  type: OrdersActionsTypes.SEND_CONFIRM_EMAIL_ERROR,\n  payload: error\n});\n\nconst onConfirmOrder = (token) => ({\n  type: OrdersActionsTypes.CONFIRM_ORDER,\n  payload: token\n});\nconst onConfirmOrderSuccess = (data) => ({\n  type: OrdersActionsTypes.CONFIRM_ORDER_SUCCESS,\n  payload: data\n});\nconst onConfirmOrderError = (error) => ({\n  type: OrdersActionsTypes.CONFIRM_ORDER_ERROR,\n  payload: error\n});\n\nconst onGetList = (payload) => ({\n  type: OrdersActionsTypes.GET_LIST,\n  payload\n});\nconst onGetListSuccess = (list, total) => ({\n  type: OrdersActionsTypes.GET_LIST_SUCCESS,\n  payload: {list, total}\n});\nconst onGetListError = (error) => ({\n  type: OrdersActionsTypes.GET_LIST_ERROR,\n  payload: error\n});\n\nconst onUpdate = (id, data, params) => ({\n  type: OrdersActionsTypes.UPDATE,\n  payload: { id, data, params },\n});\n\nconst onUpdateSuccess = (detail) => ({\n  type: OrdersActionsTypes.UPDATE_SUCCESS,\n  payload: detail,\n});\n\nconst onUpdateError = (error) => ({\n  type: OrdersActionsTypes.UPDATE_ERROR,\n  payload: error,\n});\n\nconst OrdersActions = {\n  onClearDetail,\n\n  onCreate,\n  onCreateError,\n  onCreateSuccess,\n\n  onSendConfirmEmail,\n  onSendConfirmEmailSuccess,\n  onSendConfirmEmailError,\n\n  onConfirmOrder,\n  onConfirmOrderSuccess,\n  onConfirmOrderError,\n\n  onGetList,\n  onGetListSuccess,\n  onGetListError,\n\n  onGetDetail,\n  onGetDetailSuccess,\n  onGetDetailError,\n  \n  onUpdate,\n  onUpdateSuccess,\n  onUpdateError,\n};\n\nexport default OrdersActions;\n"]},"metadata":{},"sourceType":"module"}